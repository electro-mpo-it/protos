// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.33.0
// 	protoc        v4.25.3
// source: products/products.proto

package productspb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	wrapperspb "google.golang.org/protobuf/types/known/wrapperspb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Перечисление допустимых единиц измерения для товара
type UnitOfMeasurementENUM int32

const (
	UnitOfMeasurementENUM_PIECE        UnitOfMeasurementENUM = 0 // Штука
	UnitOfMeasurementENUM_PAIR         UnitOfMeasurementENUM = 1 // Пара
	UnitOfMeasurementENUM_LITER        UnitOfMeasurementENUM = 2 // Литр
	UnitOfMeasurementENUM_ROLL         UnitOfMeasurementENUM = 3 // Рулон
	UnitOfMeasurementENUM_SHEET        UnitOfMeasurementENUM = 4 // Лист
	UnitOfMeasurementENUM_CENTIMETRE   UnitOfMeasurementENUM = 5 // Сантиметр
	UnitOfMeasurementENUM_METRE        UnitOfMeasurementENUM = 6 // Метр
	UnitOfMeasurementENUM_KILOGRAM     UnitOfMeasurementENUM = 7 // Килограмм
	UnitOfMeasurementENUM_SQUARE_METER UnitOfMeasurementENUM = 8 // Квадратный метр
	UnitOfMeasurementENUM_CUBIC_METER  UnitOfMeasurementENUM = 9 // Кубический метр
)

// Enum value maps for UnitOfMeasurementENUM.
var (
	UnitOfMeasurementENUM_name = map[int32]string{
		0: "PIECE",
		1: "PAIR",
		2: "LITER",
		3: "ROLL",
		4: "SHEET",
		5: "CENTIMETRE",
		6: "METRE",
		7: "KILOGRAM",
		8: "SQUARE_METER",
		9: "CUBIC_METER",
	}
	UnitOfMeasurementENUM_value = map[string]int32{
		"PIECE":        0,
		"PAIR":         1,
		"LITER":        2,
		"ROLL":         3,
		"SHEET":        4,
		"CENTIMETRE":   5,
		"METRE":        6,
		"KILOGRAM":     7,
		"SQUARE_METER": 8,
		"CUBIC_METER":  9,
	}
)

func (x UnitOfMeasurementENUM) Enum() *UnitOfMeasurementENUM {
	p := new(UnitOfMeasurementENUM)
	*p = x
	return p
}

func (x UnitOfMeasurementENUM) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (UnitOfMeasurementENUM) Descriptor() protoreflect.EnumDescriptor {
	return file_products_products_proto_enumTypes[0].Descriptor()
}

func (UnitOfMeasurementENUM) Type() protoreflect.EnumType {
	return &file_products_products_proto_enumTypes[0]
}

func (x UnitOfMeasurementENUM) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use UnitOfMeasurementENUM.Descriptor instead.
func (UnitOfMeasurementENUM) EnumDescriptor() ([]byte, []int) {
	return file_products_products_proto_rawDescGZIP(), []int{0}
}

// Перечисление допустимого налога для товара
type VATENUM int32

const (
	VATENUM_NDS20 VATENUM = 0 // Налог 20%
	VATENUM_NDS10 VATENUM = 1 // Налог 10%
	VATENUM_NDS0  VATENUM = 2 // Налог 0%
)

// Enum value maps for VATENUM.
var (
	VATENUM_name = map[int32]string{
		0: "NDS20",
		1: "NDS10",
		2: "NDS0",
	}
	VATENUM_value = map[string]int32{
		"NDS20": 0,
		"NDS10": 1,
		"NDS0":  2,
	}
)

func (x VATENUM) Enum() *VATENUM {
	p := new(VATENUM)
	*p = x
	return p
}

func (x VATENUM) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (VATENUM) Descriptor() protoreflect.EnumDescriptor {
	return file_products_products_proto_enumTypes[1].Descriptor()
}

func (VATENUM) Type() protoreflect.EnumType {
	return &file_products_products_proto_enumTypes[1]
}

func (x VATENUM) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use VATENUM.Descriptor instead.
func (VATENUM) EnumDescriptor() ([]byte, []int) {
	return file_products_products_proto_rawDescGZIP(), []int{1}
}

// Перечисление возможных типов данных значений характеристики
type CharacteristicValuesTypeEnum int32

const (
	CharacteristicValuesTypeEnum_TEXT    CharacteristicValuesTypeEnum = 0
	CharacteristicValuesTypeEnum_NUMERIC CharacteristicValuesTypeEnum = 1
)

// Enum value maps for CharacteristicValuesTypeEnum.
var (
	CharacteristicValuesTypeEnum_name = map[int32]string{
		0: "TEXT",
		1: "NUMERIC",
	}
	CharacteristicValuesTypeEnum_value = map[string]int32{
		"TEXT":    0,
		"NUMERIC": 1,
	}
)

func (x CharacteristicValuesTypeEnum) Enum() *CharacteristicValuesTypeEnum {
	p := new(CharacteristicValuesTypeEnum)
	*p = x
	return p
}

func (x CharacteristicValuesTypeEnum) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CharacteristicValuesTypeEnum) Descriptor() protoreflect.EnumDescriptor {
	return file_products_products_proto_enumTypes[2].Descriptor()
}

func (CharacteristicValuesTypeEnum) Type() protoreflect.EnumType {
	return &file_products_products_proto_enumTypes[2]
}

func (x CharacteristicValuesTypeEnum) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CharacteristicValuesTypeEnum.Descriptor instead.
func (CharacteristicValuesTypeEnum) EnumDescriptor() ([]byte, []int) {
	return file_products_products_proto_rawDescGZIP(), []int{2}
}

// Обёртка для случаев когда ENUM опционален
type OptionalUnitOfMeasurementENUM struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value UnitOfMeasurementENUM `protobuf:"varint,1,opt,name=value,proto3,enum=productspb.UnitOfMeasurementENUM" json:"value,omitempty"`
}

func (x *OptionalUnitOfMeasurementENUM) Reset() {
	*x = OptionalUnitOfMeasurementENUM{}
	if protoimpl.UnsafeEnabled {
		mi := &file_products_products_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OptionalUnitOfMeasurementENUM) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OptionalUnitOfMeasurementENUM) ProtoMessage() {}

func (x *OptionalUnitOfMeasurementENUM) ProtoReflect() protoreflect.Message {
	mi := &file_products_products_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OptionalUnitOfMeasurementENUM.ProtoReflect.Descriptor instead.
func (*OptionalUnitOfMeasurementENUM) Descriptor() ([]byte, []int) {
	return file_products_products_proto_rawDescGZIP(), []int{0}
}

func (x *OptionalUnitOfMeasurementENUM) GetValue() UnitOfMeasurementENUM {
	if x != nil {
		return x.Value
	}
	return UnitOfMeasurementENUM_PIECE
}

// Обёртка для случаев когда ENUM опционален
type OptionalVATENUM struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value VATENUM `protobuf:"varint,1,opt,name=value,proto3,enum=productspb.VATENUM" json:"value,omitempty"`
}

func (x *OptionalVATENUM) Reset() {
	*x = OptionalVATENUM{}
	if protoimpl.UnsafeEnabled {
		mi := &file_products_products_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OptionalVATENUM) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OptionalVATENUM) ProtoMessage() {}

func (x *OptionalVATENUM) ProtoReflect() protoreflect.Message {
	mi := &file_products_products_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OptionalVATENUM.ProtoReflect.Descriptor instead.
func (*OptionalVATENUM) Descriptor() ([]byte, []int) {
	return file_products_products_proto_rawDescGZIP(), []int{1}
}

func (x *OptionalVATENUM) GetValue() VATENUM {
	if x != nil {
		return x.Value
	}
	return VATENUM_NDS20
}

// Изображение товара
type ProductImage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ImageUrl string `protobuf:"bytes,1,opt,name=image_url,json=imageUrl,proto3" json:"image_url,omitempty"`
	Sort     uint32 `protobuf:"varint,2,opt,name=sort,proto3" json:"sort,omitempty"`
}

func (x *ProductImage) Reset() {
	*x = ProductImage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_products_products_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProductImage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProductImage) ProtoMessage() {}

func (x *ProductImage) ProtoReflect() protoreflect.Message {
	mi := &file_products_products_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProductImage.ProtoReflect.Descriptor instead.
func (*ProductImage) Descriptor() ([]byte, []int) {
	return file_products_products_proto_rawDescGZIP(), []int{2}
}

func (x *ProductImage) GetImageUrl() string {
	if x != nil {
		return x.ImageUrl
	}
	return ""
}

func (x *ProductImage) GetSort() uint32 {
	if x != nil {
		return x.Sort
	}
	return 0
}

// Характеристика
type Characteristic struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         string                       `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name       string                       `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	ValuesType CharacteristicValuesTypeEnum `protobuf:"varint,3,opt,name=values_type,json=valuesType,proto3,enum=productspb.CharacteristicValuesTypeEnum" json:"values_type,omitempty"`
}

func (x *Characteristic) Reset() {
	*x = Characteristic{}
	if protoimpl.UnsafeEnabled {
		mi := &file_products_products_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Characteristic) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Characteristic) ProtoMessage() {}

func (x *Characteristic) ProtoReflect() protoreflect.Message {
	mi := &file_products_products_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Characteristic.ProtoReflect.Descriptor instead.
func (*Characteristic) Descriptor() ([]byte, []int) {
	return file_products_products_proto_rawDescGZIP(), []int{3}
}

func (x *Characteristic) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Characteristic) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Characteristic) GetValuesType() CharacteristicValuesTypeEnum {
	if x != nil {
		return x.ValuesType
	}
	return CharacteristicValuesTypeEnum_TEXT
}

// Характеристика товара
type ProductCharacteristic struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Characteristic *Characteristic `protobuf:"bytes,1,opt,name=characteristic,proto3" json:"characteristic,omitempty"`
	// Types that are assignable to Value:
	//
	//	*ProductCharacteristic_TextValue
	//	*ProductCharacteristic_NumericValue
	Value isProductCharacteristic_Value `protobuf_oneof:"value"`
}

func (x *ProductCharacteristic) Reset() {
	*x = ProductCharacteristic{}
	if protoimpl.UnsafeEnabled {
		mi := &file_products_products_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProductCharacteristic) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProductCharacteristic) ProtoMessage() {}

func (x *ProductCharacteristic) ProtoReflect() protoreflect.Message {
	mi := &file_products_products_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProductCharacteristic.ProtoReflect.Descriptor instead.
func (*ProductCharacteristic) Descriptor() ([]byte, []int) {
	return file_products_products_proto_rawDescGZIP(), []int{4}
}

func (x *ProductCharacteristic) GetCharacteristic() *Characteristic {
	if x != nil {
		return x.Characteristic
	}
	return nil
}

func (m *ProductCharacteristic) GetValue() isProductCharacteristic_Value {
	if m != nil {
		return m.Value
	}
	return nil
}

func (x *ProductCharacteristic) GetTextValue() string {
	if x, ok := x.GetValue().(*ProductCharacteristic_TextValue); ok {
		return x.TextValue
	}
	return ""
}

func (x *ProductCharacteristic) GetNumericValue() float64 {
	if x, ok := x.GetValue().(*ProductCharacteristic_NumericValue); ok {
		return x.NumericValue
	}
	return 0
}

type isProductCharacteristic_Value interface {
	isProductCharacteristic_Value()
}

type ProductCharacteristic_TextValue struct {
	TextValue string `protobuf:"bytes,101,opt,name=text_value,json=textValue,proto3,oneof"`
}

type ProductCharacteristic_NumericValue struct {
	NumericValue float64 `protobuf:"fixed64,102,opt,name=numeric_value,json=numericValue,proto3,oneof"`
}

func (*ProductCharacteristic_TextValue) isProductCharacteristic_Value() {}

func (*ProductCharacteristic_NumericValue) isProductCharacteristic_Value() {}

// Фильтр по характеристикам товара
type CharacteristicsFilter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TextValues    []*CharacteristicsFilter_TextValue    `protobuf:"bytes,1,rep,name=text_values,json=textValues,proto3" json:"text_values,omitempty"`
	NumericValues []*CharacteristicsFilter_NumericValue `protobuf:"bytes,2,rep,name=numeric_values,json=numericValues,proto3" json:"numeric_values,omitempty"`
}

func (x *CharacteristicsFilter) Reset() {
	*x = CharacteristicsFilter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_products_products_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CharacteristicsFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CharacteristicsFilter) ProtoMessage() {}

func (x *CharacteristicsFilter) ProtoReflect() protoreflect.Message {
	mi := &file_products_products_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CharacteristicsFilter.ProtoReflect.Descriptor instead.
func (*CharacteristicsFilter) Descriptor() ([]byte, []int) {
	return file_products_products_proto_rawDescGZIP(), []int{5}
}

func (x *CharacteristicsFilter) GetTextValues() []*CharacteristicsFilter_TextValue {
	if x != nil {
		return x.TextValues
	}
	return nil
}

func (x *CharacteristicsFilter) GetNumericValues() []*CharacteristicsFilter_NumericValue {
	if x != nil {
		return x.NumericValues
	}
	return nil
}

// Репрезентация товара с всеми полями
type Product struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name              string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	CategoryId        string                 `protobuf:"bytes,3,opt,name=category_id,json=categoryId,proto3" json:"category_id,omitempty"`
	Description       string                 `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	UnitOfMeasurement UnitOfMeasurementENUM  `protobuf:"varint,5,opt,name=unit_of_measurement,json=unitOfMeasurement,proto3,enum=productspb.UnitOfMeasurementENUM" json:"unit_of_measurement,omitempty"`
	Vat               VATENUM                `protobuf:"varint,6,opt,name=vat,proto3,enum=productspb.VATENUM" json:"vat,omitempty"`
	OldPrice          float64                `protobuf:"fixed64,7,opt,name=old_price,json=oldPrice,proto3" json:"old_price,omitempty"`
	DiscountRatio     float64                `protobuf:"fixed64,8,opt,name=discount_ratio,json=discountRatio,proto3" json:"discount_ratio,omitempty"`
	Price             float64                `protobuf:"fixed64,9,opt,name=price,proto3" json:"price,omitempty"`
	IsVisible         bool                   `protobuf:"varint,10,opt,name=is_visible,json=isVisible,proto3" json:"is_visible,omitempty"`
	UpdatedAt         *timestamppb.Timestamp `protobuf:"bytes,11,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	Images            []*ProductImage        `protobuf:"bytes,12,rep,name=images,proto3" json:"images,omitempty"`
}

func (x *Product) Reset() {
	*x = Product{}
	if protoimpl.UnsafeEnabled {
		mi := &file_products_products_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Product) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Product) ProtoMessage() {}

func (x *Product) ProtoReflect() protoreflect.Message {
	mi := &file_products_products_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Product.ProtoReflect.Descriptor instead.
func (*Product) Descriptor() ([]byte, []int) {
	return file_products_products_proto_rawDescGZIP(), []int{6}
}

func (x *Product) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Product) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Product) GetCategoryId() string {
	if x != nil {
		return x.CategoryId
	}
	return ""
}

func (x *Product) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Product) GetUnitOfMeasurement() UnitOfMeasurementENUM {
	if x != nil {
		return x.UnitOfMeasurement
	}
	return UnitOfMeasurementENUM_PIECE
}

func (x *Product) GetVat() VATENUM {
	if x != nil {
		return x.Vat
	}
	return VATENUM_NDS20
}

func (x *Product) GetOldPrice() float64 {
	if x != nil {
		return x.OldPrice
	}
	return 0
}

func (x *Product) GetDiscountRatio() float64 {
	if x != nil {
		return x.DiscountRatio
	}
	return 0
}

func (x *Product) GetPrice() float64 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *Product) GetIsVisible() bool {
	if x != nil {
		return x.IsVisible
	}
	return false
}

func (x *Product) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *Product) GetImages() []*ProductImage {
	if x != nil {
		return x.Images
	}
	return nil
}

type CreateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name              string                `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`                                                                                             // Required.
	CategoryId        string                `protobuf:"bytes,2,opt,name=category_id,json=categoryId,proto3" json:"category_id,omitempty"`                                                               // Required.
	Description       string                `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`                                                                               // Required.
	UnitOfMeasurement UnitOfMeasurementENUM `protobuf:"varint,4,opt,name=unit_of_measurement,json=unitOfMeasurement,proto3,enum=productspb.UnitOfMeasurementENUM" json:"unit_of_measurement,omitempty"` // Required.
	Vat               VATENUM               `protobuf:"varint,5,opt,name=vat,proto3,enum=productspb.VATENUM" json:"vat,omitempty"`                                                                      // Required.
	OldPrice          float64               `protobuf:"fixed64,6,opt,name=old_price,json=oldPrice,proto3" json:"old_price,omitempty"`                                                                   // Required.
	DiscountRatio     float64               `protobuf:"fixed64,7,opt,name=discount_ratio,json=discountRatio,proto3" json:"discount_ratio,omitempty"`                                                    // Required.
}

func (x *CreateRequest) Reset() {
	*x = CreateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_products_products_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateRequest) ProtoMessage() {}

func (x *CreateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_products_products_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateRequest.ProtoReflect.Descriptor instead.
func (*CreateRequest) Descriptor() ([]byte, []int) {
	return file_products_products_proto_rawDescGZIP(), []int{7}
}

func (x *CreateRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateRequest) GetCategoryId() string {
	if x != nil {
		return x.CategoryId
	}
	return ""
}

func (x *CreateRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *CreateRequest) GetUnitOfMeasurement() UnitOfMeasurementENUM {
	if x != nil {
		return x.UnitOfMeasurement
	}
	return UnitOfMeasurementENUM_PIECE
}

func (x *CreateRequest) GetVat() VATENUM {
	if x != nil {
		return x.Vat
	}
	return VATENUM_NDS20
}

func (x *CreateRequest) GetOldPrice() float64 {
	if x != nil {
		return x.OldPrice
	}
	return 0
}

func (x *CreateRequest) GetDiscountRatio() float64 {
	if x != nil {
		return x.DiscountRatio
	}
	return 0
}

type CreateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"` // Id of product
}

func (x *CreateResponse) Reset() {
	*x = CreateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_products_products_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateResponse) ProtoMessage() {}

func (x *CreateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_products_products_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateResponse.ProtoReflect.Descriptor instead.
func (*CreateResponse) Descriptor() ([]byte, []int) {
	return file_products_products_proto_rawDescGZIP(), []int{8}
}

func (x *CreateResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetByIDRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"` // Required. Id of product
}

func (x *GetByIDRequest) Reset() {
	*x = GetByIDRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_products_products_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetByIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetByIDRequest) ProtoMessage() {}

func (x *GetByIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_products_products_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetByIDRequest.ProtoReflect.Descriptor instead.
func (*GetByIDRequest) Descriptor() ([]byte, []int) {
	return file_products_products_proto_rawDescGZIP(), []int{9}
}

func (x *GetByIDRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetByIDResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data *Product `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *GetByIDResponse) Reset() {
	*x = GetByIDResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_products_products_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetByIDResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetByIDResponse) ProtoMessage() {}

func (x *GetByIDResponse) ProtoReflect() protoreflect.Message {
	mi := &file_products_products_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetByIDResponse.ProtoReflect.Descriptor instead.
func (*GetByIDResponse) Descriptor() ([]byte, []int) {
	return file_products_products_proto_rawDescGZIP(), []int{10}
}

func (x *GetByIDResponse) GetData() *Product {
	if x != nil {
		return x.Data
	}
	return nil
}

type FindRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Limit           uint32                  `protobuf:"varint,1,opt,name=limit,proto3" json:"limit,omitempty"`                            // Required
	Offset          uint64                  `protobuf:"varint,2,opt,name=offset,proto3" json:"offset,omitempty"`                          // Required (0 is valid)
	Search          *wrapperspb.StringValue `protobuf:"bytes,3,opt,name=search,proto3" json:"search,omitempty"`                           // If passed - search by string
	CategoryId      *wrapperspb.StringValue `protobuf:"bytes,4,opt,name=category_id,json=categoryId,proto3" json:"category_id,omitempty"` // If passed - result set will contains products in this category
	IsVisible       *wrapperspb.BoolValue   `protobuf:"bytes,5,opt,name=is_visible,json=isVisible,proto3" json:"is_visible,omitempty"`    // If passed - result set wil contains products with visible flag is <value>
	Characteristics *CharacteristicsFilter  `protobuf:"bytes,6,opt,name=characteristics,proto3" json:"characteristics,omitempty"`         // If passed - every product will contains id of characteristic and one of passed values
}

func (x *FindRequest) Reset() {
	*x = FindRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_products_products_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindRequest) ProtoMessage() {}

func (x *FindRequest) ProtoReflect() protoreflect.Message {
	mi := &file_products_products_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindRequest.ProtoReflect.Descriptor instead.
func (*FindRequest) Descriptor() ([]byte, []int) {
	return file_products_products_proto_rawDescGZIP(), []int{11}
}

func (x *FindRequest) GetLimit() uint32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *FindRequest) GetOffset() uint64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *FindRequest) GetSearch() *wrapperspb.StringValue {
	if x != nil {
		return x.Search
	}
	return nil
}

func (x *FindRequest) GetCategoryId() *wrapperspb.StringValue {
	if x != nil {
		return x.CategoryId
	}
	return nil
}

func (x *FindRequest) GetIsVisible() *wrapperspb.BoolValue {
	if x != nil {
		return x.IsVisible
	}
	return nil
}

func (x *FindRequest) GetCharacteristics() *CharacteristicsFilter {
	if x != nil {
		return x.Characteristics
	}
	return nil
}

type FindResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data []*Product `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *FindResponse) Reset() {
	*x = FindResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_products_products_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindResponse) ProtoMessage() {}

func (x *FindResponse) ProtoReflect() protoreflect.Message {
	mi := &file_products_products_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindResponse.ProtoReflect.Descriptor instead.
func (*FindResponse) Descriptor() ([]byte, []int) {
	return file_products_products_proto_rawDescGZIP(), []int{12}
}

func (x *FindResponse) GetData() []*Product {
	if x != nil {
		return x.Data
	}
	return nil
}

type UpdateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   string              `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`     // ID of target product
	Data *UpdateRequest_Data `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"` // Data to update
}

func (x *UpdateRequest) Reset() {
	*x = UpdateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_products_products_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateRequest) ProtoMessage() {}

func (x *UpdateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_products_products_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateRequest.ProtoReflect.Descriptor instead.
func (*UpdateRequest) Descriptor() ([]byte, []int) {
	return file_products_products_proto_rawDescGZIP(), []int{13}
}

func (x *UpdateRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UpdateRequest) GetData() *UpdateRequest_Data {
	if x != nil {
		return x.Data
	}
	return nil
}

type SetVisibleRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   string                  `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`     // ID of target product
	Data *SetVisibleRequest_Data `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"` // Data to update
}

func (x *SetVisibleRequest) Reset() {
	*x = SetVisibleRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_products_products_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetVisibleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetVisibleRequest) ProtoMessage() {}

func (x *SetVisibleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_products_products_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetVisibleRequest.ProtoReflect.Descriptor instead.
func (*SetVisibleRequest) Descriptor() ([]byte, []int) {
	return file_products_products_proto_rawDescGZIP(), []int{14}
}

func (x *SetVisibleRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *SetVisibleRequest) GetData() *SetVisibleRequest_Data {
	if x != nil {
		return x.Data
	}
	return nil
}

type UpdateImagesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   string                    `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`     // ID of target product
	Data *UpdateImagesRequest_Data `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"` // Data to update
}

func (x *UpdateImagesRequest) Reset() {
	*x = UpdateImagesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_products_products_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateImagesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateImagesRequest) ProtoMessage() {}

func (x *UpdateImagesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_products_products_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateImagesRequest.ProtoReflect.Descriptor instead.
func (*UpdateImagesRequest) Descriptor() ([]byte, []int) {
	return file_products_products_proto_rawDescGZIP(), []int{15}
}

func (x *UpdateImagesRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UpdateImagesRequest) GetData() *UpdateImagesRequest_Data {
	if x != nil {
		return x.Data
	}
	return nil
}

type CreateCharacteristicRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name       string                       `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`                                                                             // Required.
	ValuesType CharacteristicValuesTypeEnum `protobuf:"varint,2,opt,name=values_type,json=valuesType,proto3,enum=productspb.CharacteristicValuesTypeEnum" json:"values_type,omitempty"` // Required.
}

func (x *CreateCharacteristicRequest) Reset() {
	*x = CreateCharacteristicRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_products_products_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateCharacteristicRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateCharacteristicRequest) ProtoMessage() {}

func (x *CreateCharacteristicRequest) ProtoReflect() protoreflect.Message {
	mi := &file_products_products_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateCharacteristicRequest.ProtoReflect.Descriptor instead.
func (*CreateCharacteristicRequest) Descriptor() ([]byte, []int) {
	return file_products_products_proto_rawDescGZIP(), []int{16}
}

func (x *CreateCharacteristicRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateCharacteristicRequest) GetValuesType() CharacteristicValuesTypeEnum {
	if x != nil {
		return x.ValuesType
	}
	return CharacteristicValuesTypeEnum_TEXT
}

type CreateCharacteristicResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *CreateCharacteristicResponse) Reset() {
	*x = CreateCharacteristicResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_products_products_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateCharacteristicResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateCharacteristicResponse) ProtoMessage() {}

func (x *CreateCharacteristicResponse) ProtoReflect() protoreflect.Message {
	mi := &file_products_products_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateCharacteristicResponse.ProtoReflect.Descriptor instead.
func (*CreateCharacteristicResponse) Descriptor() ([]byte, []int) {
	return file_products_products_proto_rawDescGZIP(), []int{17}
}

func (x *CreateCharacteristicResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type FindCharacteristicsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Limit  uint32                  `protobuf:"varint,1,opt,name=limit,proto3" json:"limit,omitempty"`  // Required
	Search *wrapperspb.StringValue `protobuf:"bytes,2,opt,name=search,proto3" json:"search,omitempty"` // If passed - applay full text search
}

func (x *FindCharacteristicsRequest) Reset() {
	*x = FindCharacteristicsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_products_products_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindCharacteristicsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindCharacteristicsRequest) ProtoMessage() {}

func (x *FindCharacteristicsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_products_products_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindCharacteristicsRequest.ProtoReflect.Descriptor instead.
func (*FindCharacteristicsRequest) Descriptor() ([]byte, []int) {
	return file_products_products_proto_rawDescGZIP(), []int{18}
}

func (x *FindCharacteristicsRequest) GetLimit() uint32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *FindCharacteristicsRequest) GetSearch() *wrapperspb.StringValue {
	if x != nil {
		return x.Search
	}
	return nil
}

type FindCharacteristicsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data []*Characteristic `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *FindCharacteristicsResponse) Reset() {
	*x = FindCharacteristicsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_products_products_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindCharacteristicsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindCharacteristicsResponse) ProtoMessage() {}

func (x *FindCharacteristicsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_products_products_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindCharacteristicsResponse.ProtoReflect.Descriptor instead.
func (*FindCharacteristicsResponse) Descriptor() ([]byte, []int) {
	return file_products_products_proto_rawDescGZIP(), []int{19}
}

func (x *FindCharacteristicsResponse) GetData() []*Characteristic {
	if x != nil {
		return x.Data
	}
	return nil
}

type UpdateCharacteristicRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   string                            `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Data *UpdateCharacteristicRequest_Data `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *UpdateCharacteristicRequest) Reset() {
	*x = UpdateCharacteristicRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_products_products_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateCharacteristicRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateCharacteristicRequest) ProtoMessage() {}

func (x *UpdateCharacteristicRequest) ProtoReflect() protoreflect.Message {
	mi := &file_products_products_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateCharacteristicRequest.ProtoReflect.Descriptor instead.
func (*UpdateCharacteristicRequest) Descriptor() ([]byte, []int) {
	return file_products_products_proto_rawDescGZIP(), []int{20}
}

func (x *UpdateCharacteristicRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UpdateCharacteristicRequest) GetData() *UpdateCharacteristicRequest_Data {
	if x != nil {
		return x.Data
	}
	return nil
}

type DeleteCharacteristicRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeleteCharacteristicRequest) Reset() {
	*x = DeleteCharacteristicRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_products_products_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteCharacteristicRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteCharacteristicRequest) ProtoMessage() {}

func (x *DeleteCharacteristicRequest) ProtoReflect() protoreflect.Message {
	mi := &file_products_products_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteCharacteristicRequest.ProtoReflect.Descriptor instead.
func (*DeleteCharacteristicRequest) Descriptor() ([]byte, []int) {
	return file_products_products_proto_rawDescGZIP(), []int{21}
}

func (x *DeleteCharacteristicRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type AddCharToProdRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProductId        string `protobuf:"bytes,1,opt,name=product_id,json=productId,proto3" json:"product_id,omitempty"`
	CharacteristicId string `protobuf:"bytes,2,opt,name=characteristic_id,json=characteristicId,proto3" json:"characteristic_id,omitempty"`
	// Types that are assignable to Value:
	//
	//	*AddCharToProdRequest_TextValue
	//	*AddCharToProdRequest_NumericValue
	Value isAddCharToProdRequest_Value `protobuf_oneof:"value"`
}

func (x *AddCharToProdRequest) Reset() {
	*x = AddCharToProdRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_products_products_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddCharToProdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddCharToProdRequest) ProtoMessage() {}

func (x *AddCharToProdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_products_products_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddCharToProdRequest.ProtoReflect.Descriptor instead.
func (*AddCharToProdRequest) Descriptor() ([]byte, []int) {
	return file_products_products_proto_rawDescGZIP(), []int{22}
}

func (x *AddCharToProdRequest) GetProductId() string {
	if x != nil {
		return x.ProductId
	}
	return ""
}

func (x *AddCharToProdRequest) GetCharacteristicId() string {
	if x != nil {
		return x.CharacteristicId
	}
	return ""
}

func (m *AddCharToProdRequest) GetValue() isAddCharToProdRequest_Value {
	if m != nil {
		return m.Value
	}
	return nil
}

func (x *AddCharToProdRequest) GetTextValue() string {
	if x, ok := x.GetValue().(*AddCharToProdRequest_TextValue); ok {
		return x.TextValue
	}
	return ""
}

func (x *AddCharToProdRequest) GetNumericValue() float64 {
	if x, ok := x.GetValue().(*AddCharToProdRequest_NumericValue); ok {
		return x.NumericValue
	}
	return 0
}

type isAddCharToProdRequest_Value interface {
	isAddCharToProdRequest_Value()
}

type AddCharToProdRequest_TextValue struct {
	TextValue string `protobuf:"bytes,101,opt,name=text_value,json=textValue,proto3,oneof"`
}

type AddCharToProdRequest_NumericValue struct {
	NumericValue float64 `protobuf:"fixed64,102,opt,name=numeric_value,json=numericValue,proto3,oneof"`
}

func (*AddCharToProdRequest_TextValue) isAddCharToProdRequest_Value() {}

func (*AddCharToProdRequest_NumericValue) isAddCharToProdRequest_Value() {}

type RemoveCharFromProdRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProductId        string `protobuf:"bytes,1,opt,name=product_id,json=productId,proto3" json:"product_id,omitempty"`
	CharacteristicId string `protobuf:"bytes,2,opt,name=characteristic_id,json=characteristicId,proto3" json:"characteristic_id,omitempty"`
}

func (x *RemoveCharFromProdRequest) Reset() {
	*x = RemoveCharFromProdRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_products_products_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveCharFromProdRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveCharFromProdRequest) ProtoMessage() {}

func (x *RemoveCharFromProdRequest) ProtoReflect() protoreflect.Message {
	mi := &file_products_products_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveCharFromProdRequest.ProtoReflect.Descriptor instead.
func (*RemoveCharFromProdRequest) Descriptor() ([]byte, []int) {
	return file_products_products_proto_rawDescGZIP(), []int{23}
}

func (x *RemoveCharFromProdRequest) GetProductId() string {
	if x != nil {
		return x.ProductId
	}
	return ""
}

func (x *RemoveCharFromProdRequest) GetCharacteristicId() string {
	if x != nil {
		return x.CharacteristicId
	}
	return ""
}

type GetProdCharsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProductId string `protobuf:"bytes,1,opt,name=product_id,json=productId,proto3" json:"product_id,omitempty"`
}

func (x *GetProdCharsRequest) Reset() {
	*x = GetProdCharsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_products_products_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetProdCharsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetProdCharsRequest) ProtoMessage() {}

func (x *GetProdCharsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_products_products_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetProdCharsRequest.ProtoReflect.Descriptor instead.
func (*GetProdCharsRequest) Descriptor() ([]byte, []int) {
	return file_products_products_proto_rawDescGZIP(), []int{24}
}

func (x *GetProdCharsRequest) GetProductId() string {
	if x != nil {
		return x.ProductId
	}
	return ""
}

type GetProdCharsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data []*ProductCharacteristic `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *GetProdCharsResponse) Reset() {
	*x = GetProdCharsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_products_products_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetProdCharsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetProdCharsResponse) ProtoMessage() {}

func (x *GetProdCharsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_products_products_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetProdCharsResponse.ProtoReflect.Descriptor instead.
func (*GetProdCharsResponse) Descriptor() ([]byte, []int) {
	return file_products_products_proto_rawDescGZIP(), []int{25}
}

func (x *GetProdCharsResponse) GetData() []*ProductCharacteristic {
	if x != nil {
		return x.Data
	}
	return nil
}

type CharacteristicsFilter_TextValue struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Values []string `protobuf:"bytes,2,rep,name=values,proto3" json:"values,omitempty"`
}

func (x *CharacteristicsFilter_TextValue) Reset() {
	*x = CharacteristicsFilter_TextValue{}
	if protoimpl.UnsafeEnabled {
		mi := &file_products_products_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CharacteristicsFilter_TextValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CharacteristicsFilter_TextValue) ProtoMessage() {}

func (x *CharacteristicsFilter_TextValue) ProtoReflect() protoreflect.Message {
	mi := &file_products_products_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CharacteristicsFilter_TextValue.ProtoReflect.Descriptor instead.
func (*CharacteristicsFilter_TextValue) Descriptor() ([]byte, []int) {
	return file_products_products_proto_rawDescGZIP(), []int{5, 0}
}

func (x *CharacteristicsFilter_TextValue) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *CharacteristicsFilter_TextValue) GetValues() []string {
	if x != nil {
		return x.Values
	}
	return nil
}

type CharacteristicsFilter_NumericValue struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     string                                    `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Values *CharacteristicsFilter_NumericValue_Range `protobuf:"bytes,2,opt,name=values,proto3" json:"values,omitempty"`
}

func (x *CharacteristicsFilter_NumericValue) Reset() {
	*x = CharacteristicsFilter_NumericValue{}
	if protoimpl.UnsafeEnabled {
		mi := &file_products_products_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CharacteristicsFilter_NumericValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CharacteristicsFilter_NumericValue) ProtoMessage() {}

func (x *CharacteristicsFilter_NumericValue) ProtoReflect() protoreflect.Message {
	mi := &file_products_products_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CharacteristicsFilter_NumericValue.ProtoReflect.Descriptor instead.
func (*CharacteristicsFilter_NumericValue) Descriptor() ([]byte, []int) {
	return file_products_products_proto_rawDescGZIP(), []int{5, 1}
}

func (x *CharacteristicsFilter_NumericValue) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *CharacteristicsFilter_NumericValue) GetValues() *CharacteristicsFilter_NumericValue_Range {
	if x != nil {
		return x.Values
	}
	return nil
}

type CharacteristicsFilter_NumericValue_Range struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	From float64 `protobuf:"fixed64,1,opt,name=from,proto3" json:"from,omitempty"`
	To   float64 `protobuf:"fixed64,2,opt,name=to,proto3" json:"to,omitempty"`
}

func (x *CharacteristicsFilter_NumericValue_Range) Reset() {
	*x = CharacteristicsFilter_NumericValue_Range{}
	if protoimpl.UnsafeEnabled {
		mi := &file_products_products_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CharacteristicsFilter_NumericValue_Range) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CharacteristicsFilter_NumericValue_Range) ProtoMessage() {}

func (x *CharacteristicsFilter_NumericValue_Range) ProtoReflect() protoreflect.Message {
	mi := &file_products_products_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CharacteristicsFilter_NumericValue_Range.ProtoReflect.Descriptor instead.
func (*CharacteristicsFilter_NumericValue_Range) Descriptor() ([]byte, []int) {
	return file_products_products_proto_rawDescGZIP(), []int{5, 1, 0}
}

func (x *CharacteristicsFilter_NumericValue_Range) GetFrom() float64 {
	if x != nil {
		return x.From
	}
	return 0
}

func (x *CharacteristicsFilter_NumericValue_Range) GetTo() float64 {
	if x != nil {
		return x.To
	}
	return 0
}

type UpdateRequest_Data struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name              *wrapperspb.StringValue        `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`                                                      // If passed - set new name
	CategoryId        *wrapperspb.StringValue        `protobuf:"bytes,2,opt,name=category_id,json=categoryId,proto3" json:"category_id,omitempty"`                        // If passed - set new category id
	Description       *wrapperspb.StringValue        `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`                                        // If passed - set new description
	UnitOfMeasurement *OptionalUnitOfMeasurementENUM `protobuf:"bytes,4,opt,name=unit_of_measurement,json=unitOfMeasurement,proto3" json:"unit_of_measurement,omitempty"` // If passed - set new unit of measurement
	Vat               *OptionalVATENUM               `protobuf:"bytes,5,opt,name=vat,proto3" json:"vat,omitempty"`                                                        // If passed - set new vat              AND calculate new price!!!
	OldPrice          *wrapperspb.DoubleValue        `protobuf:"bytes,6,opt,name=old_price,json=oldPrice,proto3" json:"old_price,omitempty"`                              // If passed - set new old_price        AND calculate new price!!!
	DiscountRatio     *wrapperspb.DoubleValue        `protobuf:"bytes,7,opt,name=discount_ratio,json=discountRatio,proto3" json:"discount_ratio,omitempty"`               // If passed - set new discount_raio    AND calculate new price!!!
}

func (x *UpdateRequest_Data) Reset() {
	*x = UpdateRequest_Data{}
	if protoimpl.UnsafeEnabled {
		mi := &file_products_products_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateRequest_Data) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateRequest_Data) ProtoMessage() {}

func (x *UpdateRequest_Data) ProtoReflect() protoreflect.Message {
	mi := &file_products_products_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateRequest_Data.ProtoReflect.Descriptor instead.
func (*UpdateRequest_Data) Descriptor() ([]byte, []int) {
	return file_products_products_proto_rawDescGZIP(), []int{13, 0}
}

func (x *UpdateRequest_Data) GetName() *wrapperspb.StringValue {
	if x != nil {
		return x.Name
	}
	return nil
}

func (x *UpdateRequest_Data) GetCategoryId() *wrapperspb.StringValue {
	if x != nil {
		return x.CategoryId
	}
	return nil
}

func (x *UpdateRequest_Data) GetDescription() *wrapperspb.StringValue {
	if x != nil {
		return x.Description
	}
	return nil
}

func (x *UpdateRequest_Data) GetUnitOfMeasurement() *OptionalUnitOfMeasurementENUM {
	if x != nil {
		return x.UnitOfMeasurement
	}
	return nil
}

func (x *UpdateRequest_Data) GetVat() *OptionalVATENUM {
	if x != nil {
		return x.Vat
	}
	return nil
}

func (x *UpdateRequest_Data) GetOldPrice() *wrapperspb.DoubleValue {
	if x != nil {
		return x.OldPrice
	}
	return nil
}

func (x *UpdateRequest_Data) GetDiscountRatio() *wrapperspb.DoubleValue {
	if x != nil {
		return x.DiscountRatio
	}
	return nil
}

type SetVisibleRequest_Data struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsVisible bool `protobuf:"varint,1,opt,name=is_visible,json=isVisible,proto3" json:"is_visible,omitempty"` // Required. set new is_visible flag for target product
}

func (x *SetVisibleRequest_Data) Reset() {
	*x = SetVisibleRequest_Data{}
	if protoimpl.UnsafeEnabled {
		mi := &file_products_products_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetVisibleRequest_Data) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetVisibleRequest_Data) ProtoMessage() {}

func (x *SetVisibleRequest_Data) ProtoReflect() protoreflect.Message {
	mi := &file_products_products_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetVisibleRequest_Data.ProtoReflect.Descriptor instead.
func (*SetVisibleRequest_Data) Descriptor() ([]byte, []int) {
	return file_products_products_proto_rawDescGZIP(), []int{14, 0}
}

func (x *SetVisibleRequest_Data) GetIsVisible() bool {
	if x != nil {
		return x.IsVisible
	}
	return false
}

type UpdateImagesRequest_Data struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Images []*ProductImage `protobuf:"bytes,1,rep,name=images,proto3" json:"images,omitempty"`
}

func (x *UpdateImagesRequest_Data) Reset() {
	*x = UpdateImagesRequest_Data{}
	if protoimpl.UnsafeEnabled {
		mi := &file_products_products_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateImagesRequest_Data) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateImagesRequest_Data) ProtoMessage() {}

func (x *UpdateImagesRequest_Data) ProtoReflect() protoreflect.Message {
	mi := &file_products_products_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateImagesRequest_Data.ProtoReflect.Descriptor instead.
func (*UpdateImagesRequest_Data) Descriptor() ([]byte, []int) {
	return file_products_products_proto_rawDescGZIP(), []int{15, 0}
}

func (x *UpdateImagesRequest_Data) GetImages() []*ProductImage {
	if x != nil {
		return x.Images
	}
	return nil
}

type UpdateCharacteristicRequest_Data struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name *wrapperspb.StringValue `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *UpdateCharacteristicRequest_Data) Reset() {
	*x = UpdateCharacteristicRequest_Data{}
	if protoimpl.UnsafeEnabled {
		mi := &file_products_products_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateCharacteristicRequest_Data) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateCharacteristicRequest_Data) ProtoMessage() {}

func (x *UpdateCharacteristicRequest_Data) ProtoReflect() protoreflect.Message {
	mi := &file_products_products_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateCharacteristicRequest_Data.ProtoReflect.Descriptor instead.
func (*UpdateCharacteristicRequest_Data) Descriptor() ([]byte, []int) {
	return file_products_products_proto_rawDescGZIP(), []int{20, 0}
}

func (x *UpdateCharacteristicRequest_Data) GetName() *wrapperspb.StringValue {
	if x != nil {
		return x.Name
	}
	return nil
}

var File_products_products_proto protoreflect.FileDescriptor

var file_products_products_proto_rawDesc = []byte{
	0x0a, 0x17, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x2f, 0x70, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0a, 0x70, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x73, 0x70, 0x62, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x1e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2f, 0x77, 0x72, 0x61, 0x70, 0x70, 0x65, 0x72, 0x73, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x22, 0x58, 0x0a, 0x1d, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x55,
	0x6e, 0x69, 0x74, 0x4f, 0x66, 0x4d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74,
	0x45, 0x4e, 0x55, 0x4d, 0x12, 0x37, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x21, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x70, 0x62,
	0x2e, 0x55, 0x6e, 0x69, 0x74, 0x4f, 0x66, 0x4d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x6d, 0x65,
	0x6e, 0x74, 0x45, 0x4e, 0x55, 0x4d, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x3c, 0x0a,
	0x0f, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x56, 0x41, 0x54, 0x45, 0x4e, 0x55, 0x4d,
	0x12, 0x29, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x13, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x70, 0x62, 0x2e, 0x56, 0x41, 0x54,
	0x45, 0x4e, 0x55, 0x4d, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x3f, 0x0a, 0x0c, 0x50,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x69,
	0x6d, 0x61, 0x67, 0x65, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x69, 0x6d, 0x61, 0x67, 0x65, 0x55, 0x72, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x6f, 0x72, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x22, 0x7f, 0x0a, 0x0e,
	0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x69, 0x73, 0x74, 0x69, 0x63, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x49, 0x0a, 0x0b, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x28, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x73, 0x70, 0x62, 0x2e, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x69, 0x73,
	0x74, 0x69, 0x63, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x54, 0x79, 0x70, 0x65, 0x45, 0x6e, 0x75,
	0x6d, 0x52, 0x0a, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x54, 0x79, 0x70, 0x65, 0x22, 0xac, 0x01,
	0x0a, 0x15, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74,
	0x65, 0x72, 0x69, 0x73, 0x74, 0x69, 0x63, 0x12, 0x42, 0x0a, 0x0e, 0x63, 0x68, 0x61, 0x72, 0x61,
	0x63, 0x74, 0x65, 0x72, 0x69, 0x73, 0x74, 0x69, 0x63, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x70, 0x62, 0x2e, 0x43, 0x68, 0x61,
	0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x69, 0x73, 0x74, 0x69, 0x63, 0x52, 0x0e, 0x63, 0x68, 0x61,
	0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x69, 0x73, 0x74, 0x69, 0x63, 0x12, 0x1f, 0x0a, 0x0a, 0x74,
	0x65, 0x78, 0x74, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x65, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x00, 0x52, 0x09, 0x74, 0x65, 0x78, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x25, 0x0a, 0x0d,
	0x6e, 0x75, 0x6d, 0x65, 0x72, 0x69, 0x63, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x66, 0x20,
	0x01, 0x28, 0x01, 0x48, 0x00, 0x52, 0x0c, 0x6e, 0x75, 0x6d, 0x65, 0x72, 0x69, 0x63, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x42, 0x07, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x8d, 0x03, 0x0a,
	0x15, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73,
	0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x4c, 0x0a, 0x0b, 0x74, 0x65, 0x78, 0x74, 0x5f, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x70, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x70, 0x62, 0x2e, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74,
	0x65, 0x72, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x2e, 0x54,
	0x65, 0x78, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x0a, 0x74, 0x65, 0x78, 0x74, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x73, 0x12, 0x55, 0x0a, 0x0e, 0x6e, 0x75, 0x6d, 0x65, 0x72, 0x69, 0x63, 0x5f,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x70,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x70, 0x62, 0x2e, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63,
	0x74, 0x65, 0x72, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x2e,
	0x4e, 0x75, 0x6d, 0x65, 0x72, 0x69, 0x63, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x0d, 0x6e, 0x75,
	0x6d, 0x65, 0x72, 0x69, 0x63, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x1a, 0x33, 0x0a, 0x09, 0x54,
	0x65, 0x78, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73,
	0x1a, 0x99, 0x01, 0x0a, 0x0c, 0x4e, 0x75, 0x6d, 0x65, 0x72, 0x69, 0x63, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x4c, 0x0a, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x34, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x70, 0x62, 0x2e, 0x43,
	0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x46, 0x69,
	0x6c, 0x74, 0x65, 0x72, 0x2e, 0x4e, 0x75, 0x6d, 0x65, 0x72, 0x69, 0x63, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x2e, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x1a,
	0x2b, 0x0a, 0x05, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x72, 0x6f, 0x6d,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x52, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x12, 0x0e, 0x0a, 0x02,
	0x74, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x02, 0x74, 0x6f, 0x22, 0xd0, 0x03, 0x0a,
	0x07, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b,
	0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x12, 0x20, 0x0a,
	0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x51, 0x0a, 0x13, 0x75, 0x6e, 0x69, 0x74, 0x5f, 0x6f, 0x66, 0x5f, 0x6d, 0x65, 0x61, 0x73, 0x75,
	0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x21, 0x2e, 0x70,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x70, 0x62, 0x2e, 0x55, 0x6e, 0x69, 0x74, 0x4f, 0x66,
	0x4d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x45, 0x4e, 0x55, 0x4d, 0x52,
	0x11, 0x75, 0x6e, 0x69, 0x74, 0x4f, 0x66, 0x4d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x6d, 0x65,
	0x6e, 0x74, 0x12, 0x25, 0x0a, 0x03, 0x76, 0x61, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x13, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x70, 0x62, 0x2e, 0x56, 0x41, 0x54,
	0x45, 0x4e, 0x55, 0x4d, 0x52, 0x03, 0x76, 0x61, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x6f, 0x6c, 0x64,
	0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x6f, 0x6c,
	0x64, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x5f, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x18, 0x08, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0d,
	0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x61, 0x74, 0x69, 0x6f, 0x12, 0x14, 0x0a,
	0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x01, 0x52, 0x05, 0x70, 0x72,
	0x69, 0x63, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x76, 0x69, 0x73, 0x69, 0x62, 0x6c,
	0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x69, 0x73, 0x56, 0x69, 0x73, 0x69, 0x62,
	0x6c, 0x65, 0x12, 0x39, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x30, 0x0a,
	0x06, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x18, 0x0c, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e,
	0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x70, 0x62, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x06, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x22,
	0xa4, 0x02, 0x0a, 0x0d, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72,
	0x79, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x61, 0x74, 0x65,
	0x67, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x51, 0x0a, 0x13, 0x75, 0x6e, 0x69, 0x74,
	0x5f, 0x6f, 0x66, 0x5f, 0x6d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x21, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73,
	0x70, 0x62, 0x2e, 0x55, 0x6e, 0x69, 0x74, 0x4f, 0x66, 0x4d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65,
	0x6d, 0x65, 0x6e, 0x74, 0x45, 0x4e, 0x55, 0x4d, 0x52, 0x11, 0x75, 0x6e, 0x69, 0x74, 0x4f, 0x66,
	0x4d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x25, 0x0a, 0x03, 0x76,
	0x61, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x13, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x73, 0x70, 0x62, 0x2e, 0x56, 0x41, 0x54, 0x45, 0x4e, 0x55, 0x4d, 0x52, 0x03, 0x76,
	0x61, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x6f, 0x6c, 0x64, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x6f, 0x6c, 0x64, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12,
	0x25, 0x0a, 0x0e, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x18, 0x07, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0d, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x52, 0x61, 0x74, 0x69, 0x6f, 0x22, 0x20, 0x0a, 0x0e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x20, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x42,
	0x79, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x3a, 0x0a, 0x0f, 0x47, 0x65,
	0x74, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x27, 0x0a,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x70, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x70, 0x62, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xb8, 0x02, 0x0a, 0x0b, 0x46, 0x69, 0x6e, 0x64, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x16, 0x0a, 0x06,
	0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x6f, 0x66,
	0x66, 0x73, 0x65, 0x74, 0x12, 0x34, 0x0a, 0x06, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x52, 0x06, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x12, 0x3d, 0x0a, 0x0b, 0x63, 0x61,
	0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x0a, 0x63,
	0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x12, 0x39, 0x0a, 0x0a, 0x69, 0x73, 0x5f,
	0x76, 0x69, 0x73, 0x69, 0x62, 0x6c, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x42, 0x6f, 0x6f, 0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x09, 0x69, 0x73, 0x56, 0x69, 0x73,
	0x69, 0x62, 0x6c, 0x65, 0x12, 0x4b, 0x0a, 0x0f, 0x63, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65,
	0x72, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e,
	0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x70, 0x62, 0x2e, 0x43, 0x68, 0x61, 0x72, 0x61,
	0x63, 0x74, 0x65, 0x72, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72,
	0x52, 0x0f, 0x63, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x69, 0x73, 0x74, 0x69, 0x63,
	0x73, 0x22, 0x37, 0x0a, 0x0c, 0x46, 0x69, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x27, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x13, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x70, 0x62, 0x2e, 0x50, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x97, 0x04, 0x0a, 0x0d, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x32, 0x0a, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x70, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x73, 0x70, 0x62, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x1a, 0xc1, 0x03, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x12, 0x30, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x3d, 0x0a, 0x0b, 0x63,
	0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x0a,
	0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x12, 0x3e, 0x0a, 0x0b, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x0b, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x59, 0x0a, 0x13, 0x75, 0x6e,
	0x69, 0x74, 0x5f, 0x6f, 0x66, 0x5f, 0x6d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x6d, 0x65, 0x6e,
	0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x73, 0x70, 0x62, 0x2e, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x55, 0x6e, 0x69,
	0x74, 0x4f, 0x66, 0x4d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x45, 0x4e,
	0x55, 0x4d, 0x52, 0x11, 0x75, 0x6e, 0x69, 0x74, 0x4f, 0x66, 0x4d, 0x65, 0x61, 0x73, 0x75, 0x72,
	0x65, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x2d, 0x0a, 0x03, 0x76, 0x61, 0x74, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x70, 0x62, 0x2e,
	0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x56, 0x41, 0x54, 0x45, 0x4e, 0x55, 0x4d, 0x52,
	0x03, 0x76, 0x61, 0x74, 0x12, 0x39, 0x0a, 0x09, 0x6f, 0x6c, 0x64, 0x5f, 0x70, 0x72, 0x69, 0x63,
	0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x44, 0x6f, 0x75, 0x62, 0x6c, 0x65,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x08, 0x6f, 0x6c, 0x64, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12,
	0x43, 0x0a, 0x0e, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x44, 0x6f, 0x75, 0x62, 0x6c, 0x65,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x0d, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52,
	0x61, 0x74, 0x69, 0x6f, 0x22, 0x82, 0x01, 0x0a, 0x11, 0x53, 0x65, 0x74, 0x56, 0x69, 0x73, 0x69,
	0x62, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x36, 0x0a, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x73, 0x70, 0x62, 0x2e, 0x53, 0x65, 0x74, 0x56, 0x69, 0x73, 0x69, 0x62, 0x6c, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x1a, 0x25, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x73,
	0x5f, 0x76, 0x69, 0x73, 0x69, 0x62, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09,
	0x69, 0x73, 0x56, 0x69, 0x73, 0x69, 0x62, 0x6c, 0x65, 0x22, 0x99, 0x01, 0x0a, 0x13, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x38, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x24, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x70, 0x62, 0x2e, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x2e, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x1a, 0x38, 0x0a, 0x04, 0x44,
	0x61, 0x74, 0x61, 0x12, 0x30, 0x0a, 0x06, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x70, 0x62,
	0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x06, 0x69,
	0x6d, 0x61, 0x67, 0x65, 0x73, 0x22, 0x7c, 0x0a, 0x1b, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43,
	0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x69, 0x73, 0x74, 0x69, 0x63, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x49, 0x0a, 0x0b, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x73, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x28, 0x2e,
	0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x70, 0x62, 0x2e, 0x43, 0x68, 0x61, 0x72, 0x61,
	0x63, 0x74, 0x65, 0x72, 0x69, 0x73, 0x74, 0x69, 0x63, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x54,
	0x79, 0x70, 0x65, 0x45, 0x6e, 0x75, 0x6d, 0x52, 0x0a, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x54,
	0x79, 0x70, 0x65, 0x22, 0x2e, 0x0a, 0x1c, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x68, 0x61,
	0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x69, 0x73, 0x74, 0x69, 0x63, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x69, 0x64, 0x22, 0x68, 0x0a, 0x1a, 0x46, 0x69, 0x6e, 0x64, 0x43, 0x68, 0x61, 0x72, 0x61,
	0x63, 0x74, 0x65, 0x72, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x34, 0x0a, 0x06, 0x73, 0x65, 0x61, 0x72, 0x63,
	0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x06, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x22, 0x4d, 0x0a,
	0x1b, 0x46, 0x69, 0x6e, 0x64, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x69, 0x73,
	0x74, 0x69, 0x63, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2e, 0x0a, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x70, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x73, 0x70, 0x62, 0x2e, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65,
	0x72, 0x69, 0x73, 0x74, 0x69, 0x63, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xa9, 0x01, 0x0a,
	0x1b, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72,
	0x69, 0x73, 0x74, 0x69, 0x63, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x40, 0x0a, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x70, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x73, 0x70, 0x62, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x68,
	0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x69, 0x73, 0x74, 0x69, 0x63, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x1a, 0x38,
	0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x12, 0x30, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x2d, 0x0a, 0x1b, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x69, 0x73, 0x74, 0x69, 0x63,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0xb3, 0x01, 0x0a, 0x14, 0x41, 0x64, 0x64, 0x43,
	0x68, 0x61, 0x72, 0x54, 0x6f, 0x50, 0x72, 0x6f, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x64, 0x12,
	0x2b, 0x0a, 0x11, 0x63, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x69, 0x73, 0x74, 0x69,
	0x63, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x63, 0x68, 0x61, 0x72,
	0x61, 0x63, 0x74, 0x65, 0x72, 0x69, 0x73, 0x74, 0x69, 0x63, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0a,
	0x74, 0x65, 0x78, 0x74, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x65, 0x20, 0x01, 0x28, 0x09,
	0x48, 0x00, 0x52, 0x09, 0x74, 0x65, 0x78, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x25, 0x0a,
	0x0d, 0x6e, 0x75, 0x6d, 0x65, 0x72, 0x69, 0x63, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x66,
	0x20, 0x01, 0x28, 0x01, 0x48, 0x00, 0x52, 0x0c, 0x6e, 0x75, 0x6d, 0x65, 0x72, 0x69, 0x63, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x42, 0x07, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x67, 0x0a,
	0x19, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x43, 0x68, 0x61, 0x72, 0x46, 0x72, 0x6f, 0x6d, 0x50,
	0x72, 0x6f, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x64, 0x12, 0x2b, 0x0a, 0x11, 0x63, 0x68, 0x61,
	0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x69, 0x73, 0x74, 0x69, 0x63, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x63, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x69,
	0x73, 0x74, 0x69, 0x63, 0x49, 0x64, 0x22, 0x34, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f,
	0x64, 0x43, 0x68, 0x61, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a,
	0x0a, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x64, 0x22, 0x4d, 0x0a, 0x14,
	0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x64, 0x43, 0x68, 0x61, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x35, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x21, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x70, 0x62, 0x2e,
	0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72,
	0x69, 0x73, 0x74, 0x69, 0x63, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x2a, 0x98, 0x01, 0x0a, 0x15,
	0x55, 0x6e, 0x69, 0x74, 0x4f, 0x66, 0x4d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x6d, 0x65, 0x6e,
	0x74, 0x45, 0x4e, 0x55, 0x4d, 0x12, 0x09, 0x0a, 0x05, 0x50, 0x49, 0x45, 0x43, 0x45, 0x10, 0x00,
	0x12, 0x08, 0x0a, 0x04, 0x50, 0x41, 0x49, 0x52, 0x10, 0x01, 0x12, 0x09, 0x0a, 0x05, 0x4c, 0x49,
	0x54, 0x45, 0x52, 0x10, 0x02, 0x12, 0x08, 0x0a, 0x04, 0x52, 0x4f, 0x4c, 0x4c, 0x10, 0x03, 0x12,
	0x09, 0x0a, 0x05, 0x53, 0x48, 0x45, 0x45, 0x54, 0x10, 0x04, 0x12, 0x0e, 0x0a, 0x0a, 0x43, 0x45,
	0x4e, 0x54, 0x49, 0x4d, 0x45, 0x54, 0x52, 0x45, 0x10, 0x05, 0x12, 0x09, 0x0a, 0x05, 0x4d, 0x45,
	0x54, 0x52, 0x45, 0x10, 0x06, 0x12, 0x0c, 0x0a, 0x08, 0x4b, 0x49, 0x4c, 0x4f, 0x47, 0x52, 0x41,
	0x4d, 0x10, 0x07, 0x12, 0x10, 0x0a, 0x0c, 0x53, 0x51, 0x55, 0x41, 0x52, 0x45, 0x5f, 0x4d, 0x45,
	0x54, 0x45, 0x52, 0x10, 0x08, 0x12, 0x0f, 0x0a, 0x0b, 0x43, 0x55, 0x42, 0x49, 0x43, 0x5f, 0x4d,
	0x45, 0x54, 0x45, 0x52, 0x10, 0x09, 0x2a, 0x29, 0x0a, 0x07, 0x56, 0x41, 0x54, 0x45, 0x4e, 0x55,
	0x4d, 0x12, 0x09, 0x0a, 0x05, 0x4e, 0x44, 0x53, 0x32, 0x30, 0x10, 0x00, 0x12, 0x09, 0x0a, 0x05,
	0x4e, 0x44, 0x53, 0x31, 0x30, 0x10, 0x01, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x44, 0x53, 0x30, 0x10,
	0x02, 0x2a, 0x35, 0x0a, 0x1c, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x69, 0x73,
	0x74, 0x69, 0x63, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x54, 0x79, 0x70, 0x65, 0x45, 0x6e, 0x75,
	0x6d, 0x12, 0x08, 0x0a, 0x04, 0x54, 0x45, 0x58, 0x54, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x4e,
	0x55, 0x4d, 0x45, 0x52, 0x49, 0x43, 0x10, 0x01, 0x32, 0x8d, 0x08, 0x0a, 0x08, 0x50, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x73, 0x12, 0x3f, 0x0a, 0x06, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12,
	0x19, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x70, 0x62, 0x2e, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x70, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x73, 0x70, 0x62, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x42, 0x0a, 0x07, 0x47, 0x65, 0x74, 0x42, 0x79, 0x49,
	0x44, 0x12, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x70, 0x62, 0x2e, 0x47,
	0x65, 0x74, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e,
	0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x42, 0x79,
	0x49, 0x44, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x39, 0x0a, 0x04, 0x46, 0x69,
	0x6e, 0x64, 0x12, 0x17, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x70, 0x62, 0x2e,
	0x46, 0x69, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x70, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x70, 0x62, 0x2e, 0x46, 0x69, 0x6e, 0x64, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3b, 0x0a, 0x06, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12,
	0x19, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x70, 0x62, 0x2e, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70,
	0x74, 0x79, 0x12, 0x43, 0x0a, 0x0a, 0x53, 0x65, 0x74, 0x56, 0x69, 0x73, 0x69, 0x62, 0x6c, 0x65,
	0x12, 0x1d, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x70, 0x62, 0x2e, 0x53, 0x65,
	0x74, 0x56, 0x69, 0x73, 0x69, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x47, 0x0a, 0x0c, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x12, 0x1f, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x73, 0x70, 0x62, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x6d, 0x61, 0x67, 0x65,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79,
	0x12, 0x69, 0x0a, 0x14, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63,
	0x74, 0x65, 0x72, 0x69, 0x73, 0x74, 0x69, 0x63, 0x12, 0x27, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x73, 0x70, 0x62, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x68, 0x61, 0x72,
	0x61, 0x63, 0x74, 0x65, 0x72, 0x69, 0x73, 0x74, 0x69, 0x63, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x28, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x70, 0x62, 0x2e, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x69, 0x73,
	0x74, 0x69, 0x63, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x66, 0x0a, 0x13, 0x46,
	0x69, 0x6e, 0x64, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x69, 0x73, 0x74, 0x69,
	0x63, 0x73, 0x12, 0x26, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x70, 0x62, 0x2e,
	0x46, 0x69, 0x6e, 0x64, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x69, 0x73, 0x74,
	0x69, 0x63, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e, 0x70, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x73, 0x70, 0x62, 0x2e, 0x46, 0x69, 0x6e, 0x64, 0x43, 0x68, 0x61, 0x72,
	0x61, 0x63, 0x74, 0x65, 0x72, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x57, 0x0a, 0x14, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x68, 0x61,
	0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x69, 0x73, 0x74, 0x69, 0x63, 0x12, 0x27, 0x2e, 0x70, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x70, 0x62, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43,
	0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x69, 0x73, 0x74, 0x69, 0x63, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x57, 0x0a, 0x14,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x69,
	0x73, 0x74, 0x69, 0x63, 0x12, 0x27, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x70,
	0x62, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65,
	0x72, 0x69, 0x73, 0x74, 0x69, 0x63, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x49, 0x0a, 0x0d, 0x41, 0x64, 0x64, 0x43, 0x68, 0x61, 0x72,
	0x54, 0x6f, 0x50, 0x72, 0x6f, 0x64, 0x12, 0x20, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x73, 0x70, 0x62, 0x2e, 0x41, 0x64, 0x64, 0x43, 0x68, 0x61, 0x72, 0x54, 0x6f, 0x50, 0x72, 0x6f,
	0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79,
	0x12, 0x53, 0x0a, 0x12, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x43, 0x68, 0x61, 0x72, 0x46, 0x72,
	0x6f, 0x6d, 0x50, 0x72, 0x6f, 0x64, 0x12, 0x25, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x73, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x43, 0x68, 0x61, 0x72, 0x46, 0x72,
	0x6f, 0x6d, 0x50, 0x72, 0x6f, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x51, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x64,
	0x43, 0x68, 0x61, 0x72, 0x73, 0x12, 0x1f, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73,
	0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x64, 0x43, 0x68, 0x61, 0x72, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x73, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x64, 0x43, 0x68, 0x61, 0x72, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x3d, 0x5a, 0x3b, 0x67, 0x69, 0x74, 0x68,
	0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x72, 0x6f, 0x2d, 0x6d,
	0x70, 0x6f, 0x2d, 0x69, 0x74, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2f, 0x67, 0x65, 0x6e,
	0x2f, 0x67, 0x6f, 0x2f, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x3b, 0x70, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x73, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_products_products_proto_rawDescOnce sync.Once
	file_products_products_proto_rawDescData = file_products_products_proto_rawDesc
)

func file_products_products_proto_rawDescGZIP() []byte {
	file_products_products_proto_rawDescOnce.Do(func() {
		file_products_products_proto_rawDescData = protoimpl.X.CompressGZIP(file_products_products_proto_rawDescData)
	})
	return file_products_products_proto_rawDescData
}

var file_products_products_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_products_products_proto_msgTypes = make([]protoimpl.MessageInfo, 33)
var file_products_products_proto_goTypes = []interface{}{
	(UnitOfMeasurementENUM)(0),                       // 0: productspb.UnitOfMeasurementENUM
	(VATENUM)(0),                                     // 1: productspb.VATENUM
	(CharacteristicValuesTypeEnum)(0),                // 2: productspb.CharacteristicValuesTypeEnum
	(*OptionalUnitOfMeasurementENUM)(nil),            // 3: productspb.OptionalUnitOfMeasurementENUM
	(*OptionalVATENUM)(nil),                          // 4: productspb.OptionalVATENUM
	(*ProductImage)(nil),                             // 5: productspb.ProductImage
	(*Characteristic)(nil),                           // 6: productspb.Characteristic
	(*ProductCharacteristic)(nil),                    // 7: productspb.ProductCharacteristic
	(*CharacteristicsFilter)(nil),                    // 8: productspb.CharacteristicsFilter
	(*Product)(nil),                                  // 9: productspb.Product
	(*CreateRequest)(nil),                            // 10: productspb.CreateRequest
	(*CreateResponse)(nil),                           // 11: productspb.CreateResponse
	(*GetByIDRequest)(nil),                           // 12: productspb.GetByIDRequest
	(*GetByIDResponse)(nil),                          // 13: productspb.GetByIDResponse
	(*FindRequest)(nil),                              // 14: productspb.FindRequest
	(*FindResponse)(nil),                             // 15: productspb.FindResponse
	(*UpdateRequest)(nil),                            // 16: productspb.UpdateRequest
	(*SetVisibleRequest)(nil),                        // 17: productspb.SetVisibleRequest
	(*UpdateImagesRequest)(nil),                      // 18: productspb.UpdateImagesRequest
	(*CreateCharacteristicRequest)(nil),              // 19: productspb.CreateCharacteristicRequest
	(*CreateCharacteristicResponse)(nil),             // 20: productspb.CreateCharacteristicResponse
	(*FindCharacteristicsRequest)(nil),               // 21: productspb.FindCharacteristicsRequest
	(*FindCharacteristicsResponse)(nil),              // 22: productspb.FindCharacteristicsResponse
	(*UpdateCharacteristicRequest)(nil),              // 23: productspb.UpdateCharacteristicRequest
	(*DeleteCharacteristicRequest)(nil),              // 24: productspb.DeleteCharacteristicRequest
	(*AddCharToProdRequest)(nil),                     // 25: productspb.AddCharToProdRequest
	(*RemoveCharFromProdRequest)(nil),                // 26: productspb.RemoveCharFromProdRequest
	(*GetProdCharsRequest)(nil),                      // 27: productspb.GetProdCharsRequest
	(*GetProdCharsResponse)(nil),                     // 28: productspb.GetProdCharsResponse
	(*CharacteristicsFilter_TextValue)(nil),          // 29: productspb.CharacteristicsFilter.TextValue
	(*CharacteristicsFilter_NumericValue)(nil),       // 30: productspb.CharacteristicsFilter.NumericValue
	(*CharacteristicsFilter_NumericValue_Range)(nil), // 31: productspb.CharacteristicsFilter.NumericValue.Range
	(*UpdateRequest_Data)(nil),                       // 32: productspb.UpdateRequest.Data
	(*SetVisibleRequest_Data)(nil),                   // 33: productspb.SetVisibleRequest.Data
	(*UpdateImagesRequest_Data)(nil),                 // 34: productspb.UpdateImagesRequest.Data
	(*UpdateCharacteristicRequest_Data)(nil),         // 35: productspb.UpdateCharacteristicRequest.Data
	(*timestamppb.Timestamp)(nil),                    // 36: google.protobuf.Timestamp
	(*wrapperspb.StringValue)(nil),                   // 37: google.protobuf.StringValue
	(*wrapperspb.BoolValue)(nil),                     // 38: google.protobuf.BoolValue
	(*wrapperspb.DoubleValue)(nil),                   // 39: google.protobuf.DoubleValue
	(*emptypb.Empty)(nil),                            // 40: google.protobuf.Empty
}
var file_products_products_proto_depIdxs = []int32{
	0,  // 0: productspb.OptionalUnitOfMeasurementENUM.value:type_name -> productspb.UnitOfMeasurementENUM
	1,  // 1: productspb.OptionalVATENUM.value:type_name -> productspb.VATENUM
	2,  // 2: productspb.Characteristic.values_type:type_name -> productspb.CharacteristicValuesTypeEnum
	6,  // 3: productspb.ProductCharacteristic.characteristic:type_name -> productspb.Characteristic
	29, // 4: productspb.CharacteristicsFilter.text_values:type_name -> productspb.CharacteristicsFilter.TextValue
	30, // 5: productspb.CharacteristicsFilter.numeric_values:type_name -> productspb.CharacteristicsFilter.NumericValue
	0,  // 6: productspb.Product.unit_of_measurement:type_name -> productspb.UnitOfMeasurementENUM
	1,  // 7: productspb.Product.vat:type_name -> productspb.VATENUM
	36, // 8: productspb.Product.updated_at:type_name -> google.protobuf.Timestamp
	5,  // 9: productspb.Product.images:type_name -> productspb.ProductImage
	0,  // 10: productspb.CreateRequest.unit_of_measurement:type_name -> productspb.UnitOfMeasurementENUM
	1,  // 11: productspb.CreateRequest.vat:type_name -> productspb.VATENUM
	9,  // 12: productspb.GetByIDResponse.data:type_name -> productspb.Product
	37, // 13: productspb.FindRequest.search:type_name -> google.protobuf.StringValue
	37, // 14: productspb.FindRequest.category_id:type_name -> google.protobuf.StringValue
	38, // 15: productspb.FindRequest.is_visible:type_name -> google.protobuf.BoolValue
	8,  // 16: productspb.FindRequest.characteristics:type_name -> productspb.CharacteristicsFilter
	9,  // 17: productspb.FindResponse.data:type_name -> productspb.Product
	32, // 18: productspb.UpdateRequest.data:type_name -> productspb.UpdateRequest.Data
	33, // 19: productspb.SetVisibleRequest.data:type_name -> productspb.SetVisibleRequest.Data
	34, // 20: productspb.UpdateImagesRequest.data:type_name -> productspb.UpdateImagesRequest.Data
	2,  // 21: productspb.CreateCharacteristicRequest.values_type:type_name -> productspb.CharacteristicValuesTypeEnum
	37, // 22: productspb.FindCharacteristicsRequest.search:type_name -> google.protobuf.StringValue
	6,  // 23: productspb.FindCharacteristicsResponse.data:type_name -> productspb.Characteristic
	35, // 24: productspb.UpdateCharacteristicRequest.data:type_name -> productspb.UpdateCharacteristicRequest.Data
	7,  // 25: productspb.GetProdCharsResponse.data:type_name -> productspb.ProductCharacteristic
	31, // 26: productspb.CharacteristicsFilter.NumericValue.values:type_name -> productspb.CharacteristicsFilter.NumericValue.Range
	37, // 27: productspb.UpdateRequest.Data.name:type_name -> google.protobuf.StringValue
	37, // 28: productspb.UpdateRequest.Data.category_id:type_name -> google.protobuf.StringValue
	37, // 29: productspb.UpdateRequest.Data.description:type_name -> google.protobuf.StringValue
	3,  // 30: productspb.UpdateRequest.Data.unit_of_measurement:type_name -> productspb.OptionalUnitOfMeasurementENUM
	4,  // 31: productspb.UpdateRequest.Data.vat:type_name -> productspb.OptionalVATENUM
	39, // 32: productspb.UpdateRequest.Data.old_price:type_name -> google.protobuf.DoubleValue
	39, // 33: productspb.UpdateRequest.Data.discount_ratio:type_name -> google.protobuf.DoubleValue
	5,  // 34: productspb.UpdateImagesRequest.Data.images:type_name -> productspb.ProductImage
	37, // 35: productspb.UpdateCharacteristicRequest.Data.name:type_name -> google.protobuf.StringValue
	10, // 36: productspb.Products.Create:input_type -> productspb.CreateRequest
	12, // 37: productspb.Products.GetByID:input_type -> productspb.GetByIDRequest
	14, // 38: productspb.Products.Find:input_type -> productspb.FindRequest
	16, // 39: productspb.Products.Update:input_type -> productspb.UpdateRequest
	17, // 40: productspb.Products.SetVisible:input_type -> productspb.SetVisibleRequest
	18, // 41: productspb.Products.UpdateImages:input_type -> productspb.UpdateImagesRequest
	19, // 42: productspb.Products.CreateCharacteristic:input_type -> productspb.CreateCharacteristicRequest
	21, // 43: productspb.Products.FindCharacteristics:input_type -> productspb.FindCharacteristicsRequest
	23, // 44: productspb.Products.UpdateCharacteristic:input_type -> productspb.UpdateCharacteristicRequest
	24, // 45: productspb.Products.DeleteCharacteristic:input_type -> productspb.DeleteCharacteristicRequest
	25, // 46: productspb.Products.AddCharToProd:input_type -> productspb.AddCharToProdRequest
	26, // 47: productspb.Products.RemoveCharFromProd:input_type -> productspb.RemoveCharFromProdRequest
	27, // 48: productspb.Products.GetProdChars:input_type -> productspb.GetProdCharsRequest
	11, // 49: productspb.Products.Create:output_type -> productspb.CreateResponse
	13, // 50: productspb.Products.GetByID:output_type -> productspb.GetByIDResponse
	15, // 51: productspb.Products.Find:output_type -> productspb.FindResponse
	40, // 52: productspb.Products.Update:output_type -> google.protobuf.Empty
	40, // 53: productspb.Products.SetVisible:output_type -> google.protobuf.Empty
	40, // 54: productspb.Products.UpdateImages:output_type -> google.protobuf.Empty
	20, // 55: productspb.Products.CreateCharacteristic:output_type -> productspb.CreateCharacteristicResponse
	22, // 56: productspb.Products.FindCharacteristics:output_type -> productspb.FindCharacteristicsResponse
	40, // 57: productspb.Products.UpdateCharacteristic:output_type -> google.protobuf.Empty
	40, // 58: productspb.Products.DeleteCharacteristic:output_type -> google.protobuf.Empty
	40, // 59: productspb.Products.AddCharToProd:output_type -> google.protobuf.Empty
	40, // 60: productspb.Products.RemoveCharFromProd:output_type -> google.protobuf.Empty
	28, // 61: productspb.Products.GetProdChars:output_type -> productspb.GetProdCharsResponse
	49, // [49:62] is the sub-list for method output_type
	36, // [36:49] is the sub-list for method input_type
	36, // [36:36] is the sub-list for extension type_name
	36, // [36:36] is the sub-list for extension extendee
	0,  // [0:36] is the sub-list for field type_name
}

func init() { file_products_products_proto_init() }
func file_products_products_proto_init() {
	if File_products_products_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_products_products_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OptionalUnitOfMeasurementENUM); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_products_products_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OptionalVATENUM); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_products_products_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProductImage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_products_products_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Characteristic); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_products_products_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProductCharacteristic); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_products_products_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CharacteristicsFilter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_products_products_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Product); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_products_products_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_products_products_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_products_products_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetByIDRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_products_products_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetByIDResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_products_products_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FindRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_products_products_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FindResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_products_products_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_products_products_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetVisibleRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_products_products_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateImagesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_products_products_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateCharacteristicRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_products_products_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateCharacteristicResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_products_products_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FindCharacteristicsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_products_products_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FindCharacteristicsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_products_products_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateCharacteristicRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_products_products_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteCharacteristicRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_products_products_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddCharToProdRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_products_products_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveCharFromProdRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_products_products_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetProdCharsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_products_products_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetProdCharsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_products_products_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CharacteristicsFilter_TextValue); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_products_products_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CharacteristicsFilter_NumericValue); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_products_products_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CharacteristicsFilter_NumericValue_Range); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_products_products_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateRequest_Data); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_products_products_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetVisibleRequest_Data); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_products_products_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateImagesRequest_Data); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_products_products_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateCharacteristicRequest_Data); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_products_products_proto_msgTypes[4].OneofWrappers = []interface{}{
		(*ProductCharacteristic_TextValue)(nil),
		(*ProductCharacteristic_NumericValue)(nil),
	}
	file_products_products_proto_msgTypes[22].OneofWrappers = []interface{}{
		(*AddCharToProdRequest_TextValue)(nil),
		(*AddCharToProdRequest_NumericValue)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_products_products_proto_rawDesc,
			NumEnums:      3,
			NumMessages:   33,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_products_products_proto_goTypes,
		DependencyIndexes: file_products_products_proto_depIdxs,
		EnumInfos:         file_products_products_proto_enumTypes,
		MessageInfos:      file_products_products_proto_msgTypes,
	}.Build()
	File_products_products_proto = out.File
	file_products_products_proto_rawDesc = nil
	file_products_products_proto_goTypes = nil
	file_products_products_proto_depIdxs = nil
}
