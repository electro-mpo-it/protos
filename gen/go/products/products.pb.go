// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.33.0
// 	protoc        v4.25.3
// source: products/products.proto

package productspb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Перечисление допустимых налоговых ставок для товара
type VATENUM int32

const (
	VATENUM_NDS20 VATENUM = 0
	VATENUM_NDS10 VATENUM = 1
	VATENUM_NDS0  VATENUM = 2
)

// Enum value maps for VATENUM.
var (
	VATENUM_name = map[int32]string{
		0: "NDS20",
		1: "NDS10",
		2: "NDS0",
	}
	VATENUM_value = map[string]int32{
		"NDS20": 0,
		"NDS10": 1,
		"NDS0":  2,
	}
)

func (x VATENUM) Enum() *VATENUM {
	p := new(VATENUM)
	*p = x
	return p
}

func (x VATENUM) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (VATENUM) Descriptor() protoreflect.EnumDescriptor {
	return file_products_products_proto_enumTypes[0].Descriptor()
}

func (VATENUM) Type() protoreflect.EnumType {
	return &file_products_products_proto_enumTypes[0]
}

func (x VATENUM) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use VATENUM.Descriptor instead.
func (VATENUM) EnumDescriptor() ([]byte, []int) {
	return file_products_products_proto_rawDescGZIP(), []int{0}
}

// Перечисление допустимых единиц измерения для товара
type UnitOfMeasurementENUM int32

const (
	// Экономические единицы
	UnitOfMeasurementENUM_PIECE UnitOfMeasurementENUM = 0
	UnitOfMeasurementENUM_SHEET UnitOfMeasurementENUM = 1
	// Единицы длины
	UnitOfMeasurementENUM_CENTIMETRE UnitOfMeasurementENUM = 2
	UnitOfMeasurementENUM_METRE      UnitOfMeasurementENUM = 3
	// Единицы массы
	UnitOfMeasurementENUM_KILOGRAM UnitOfMeasurementENUM = 4
	// Единицы площади
	UnitOfMeasurementENUM_SQUARE_METER UnitOfMeasurementENUM = 5
	// Единицы объёма
	UnitOfMeasurementENUM_CUBIC_METER UnitOfMeasurementENUM = 6
)

// Enum value maps for UnitOfMeasurementENUM.
var (
	UnitOfMeasurementENUM_name = map[int32]string{
		0: "PIECE",
		1: "SHEET",
		2: "CENTIMETRE",
		3: "METRE",
		4: "KILOGRAM",
		5: "SQUARE_METER",
		6: "CUBIC_METER",
	}
	UnitOfMeasurementENUM_value = map[string]int32{
		"PIECE":        0,
		"SHEET":        1,
		"CENTIMETRE":   2,
		"METRE":        3,
		"KILOGRAM":     4,
		"SQUARE_METER": 5,
		"CUBIC_METER":  6,
	}
)

func (x UnitOfMeasurementENUM) Enum() *UnitOfMeasurementENUM {
	p := new(UnitOfMeasurementENUM)
	*p = x
	return p
}

func (x UnitOfMeasurementENUM) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (UnitOfMeasurementENUM) Descriptor() protoreflect.EnumDescriptor {
	return file_products_products_proto_enumTypes[1].Descriptor()
}

func (UnitOfMeasurementENUM) Type() protoreflect.EnumType {
	return &file_products_products_proto_enumTypes[1]
}

func (x UnitOfMeasurementENUM) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use UnitOfMeasurementENUM.Descriptor instead.
func (UnitOfMeasurementENUM) EnumDescriptor() ([]byte, []int) {
	return file_products_products_proto_rawDescGZIP(), []int{1}
}

// Перечисление значений флага видимости товара (Для метода поиска по товарам)
type VisibleENUM int32

const (
	VisibleENUM_Any        VisibleENUM = 0
	VisibleENUM_Visible    VisibleENUM = 1
	VisibleENUM_NotVisible VisibleENUM = 2
)

// Enum value maps for VisibleENUM.
var (
	VisibleENUM_name = map[int32]string{
		0: "Any",
		1: "Visible",
		2: "NotVisible",
	}
	VisibleENUM_value = map[string]int32{
		"Any":        0,
		"Visible":    1,
		"NotVisible": 2,
	}
)

func (x VisibleENUM) Enum() *VisibleENUM {
	p := new(VisibleENUM)
	*p = x
	return p
}

func (x VisibleENUM) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (VisibleENUM) Descriptor() protoreflect.EnumDescriptor {
	return file_products_products_proto_enumTypes[2].Descriptor()
}

func (VisibleENUM) Type() protoreflect.EnumType {
	return &file_products_products_proto_enumTypes[2]
}

func (x VisibleENUM) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use VisibleENUM.Descriptor instead.
func (VisibleENUM) EnumDescriptor() ([]byte, []int) {
	return file_products_products_proto_rawDescGZIP(), []int{2}
}

type Product struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                uint64                `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name              string                `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Description       string                `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	CategoryId        uint64                `protobuf:"varint,4,opt,name=category_id,json=categoryId,proto3" json:"category_id,omitempty"`
	UnitOfMeasurement UnitOfMeasurementENUM `protobuf:"varint,5,opt,name=unit_of_measurement,json=unitOfMeasurement,proto3,enum=productspb.UnitOfMeasurementENUM" json:"unit_of_measurement,omitempty"`
	Vat               VATENUM               `protobuf:"varint,6,opt,name=vat,proto3,enum=productspb.VATENUM" json:"vat,omitempty"`
	OldPrice          float64               `protobuf:"fixed64,7,opt,name=old_price,json=oldPrice,proto3" json:"old_price,omitempty"`
	DiscountCoeff     float64               `protobuf:"fixed64,8,opt,name=discount_coeff,json=discountCoeff,proto3" json:"discount_coeff,omitempty"`
	Price             float64               `protobuf:"fixed64,9,opt,name=price,proto3" json:"price,omitempty"`
	IsVisible         bool                  `protobuf:"varint,10,opt,name=is_visible,json=isVisible,proto3" json:"is_visible,omitempty"`
}

func (x *Product) Reset() {
	*x = Product{}
	if protoimpl.UnsafeEnabled {
		mi := &file_products_products_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Product) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Product) ProtoMessage() {}

func (x *Product) ProtoReflect() protoreflect.Message {
	mi := &file_products_products_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Product.ProtoReflect.Descriptor instead.
func (*Product) Descriptor() ([]byte, []int) {
	return file_products_products_proto_rawDescGZIP(), []int{0}
}

func (x *Product) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Product) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Product) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Product) GetCategoryId() uint64 {
	if x != nil {
		return x.CategoryId
	}
	return 0
}

func (x *Product) GetUnitOfMeasurement() UnitOfMeasurementENUM {
	if x != nil {
		return x.UnitOfMeasurement
	}
	return UnitOfMeasurementENUM_PIECE
}

func (x *Product) GetVat() VATENUM {
	if x != nil {
		return x.Vat
	}
	return VATENUM_NDS20
}

func (x *Product) GetOldPrice() float64 {
	if x != nil {
		return x.OldPrice
	}
	return 0
}

func (x *Product) GetDiscountCoeff() float64 {
	if x != nil {
		return x.DiscountCoeff
	}
	return 0
}

func (x *Product) GetPrice() float64 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *Product) GetIsVisible() bool {
	if x != nil {
		return x.IsVisible
	}
	return false
}

type CreateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name              string                `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Description       string                `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	CategoryId        uint64                `protobuf:"varint,3,opt,name=category_id,json=categoryId,proto3" json:"category_id,omitempty"`
	UnitOfMeasurement UnitOfMeasurementENUM `protobuf:"varint,4,opt,name=unit_of_measurement,json=unitOfMeasurement,proto3,enum=productspb.UnitOfMeasurementENUM" json:"unit_of_measurement,omitempty"`
	Vat               VATENUM               `protobuf:"varint,5,opt,name=vat,proto3,enum=productspb.VATENUM" json:"vat,omitempty"`
	OldPrice          float64               `protobuf:"fixed64,6,opt,name=old_price,json=oldPrice,proto3" json:"old_price,omitempty"`
	DiscountCoeff     float64               `protobuf:"fixed64,7,opt,name=discount_coeff,json=discountCoeff,proto3" json:"discount_coeff,omitempty"`
}

func (x *CreateRequest) Reset() {
	*x = CreateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_products_products_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateRequest) ProtoMessage() {}

func (x *CreateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_products_products_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateRequest.ProtoReflect.Descriptor instead.
func (*CreateRequest) Descriptor() ([]byte, []int) {
	return file_products_products_proto_rawDescGZIP(), []int{1}
}

func (x *CreateRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *CreateRequest) GetCategoryId() uint64 {
	if x != nil {
		return x.CategoryId
	}
	return 0
}

func (x *CreateRequest) GetUnitOfMeasurement() UnitOfMeasurementENUM {
	if x != nil {
		return x.UnitOfMeasurement
	}
	return UnitOfMeasurementENUM_PIECE
}

func (x *CreateRequest) GetVat() VATENUM {
	if x != nil {
		return x.Vat
	}
	return VATENUM_NDS20
}

func (x *CreateRequest) GetOldPrice() float64 {
	if x != nil {
		return x.OldPrice
	}
	return 0
}

func (x *CreateRequest) GetDiscountCoeff() float64 {
	if x != nil {
		return x.DiscountCoeff
	}
	return 0
}

type CreateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *CreateResponse) Reset() {
	*x = CreateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_products_products_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateResponse) ProtoMessage() {}

func (x *CreateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_products_products_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateResponse.ProtoReflect.Descriptor instead.
func (*CreateResponse) Descriptor() ([]byte, []int) {
	return file_products_products_proto_rawDescGZIP(), []int{2}
}

func (x *CreateResponse) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type GetByIDRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetByIDRequest) Reset() {
	*x = GetByIDRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_products_products_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetByIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetByIDRequest) ProtoMessage() {}

func (x *GetByIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_products_products_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetByIDRequest.ProtoReflect.Descriptor instead.
func (*GetByIDRequest) Descriptor() ([]byte, []int) {
	return file_products_products_proto_rawDescGZIP(), []int{3}
}

func (x *GetByIDRequest) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type GetByIDResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data *Product `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *GetByIDResponse) Reset() {
	*x = GetByIDResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_products_products_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetByIDResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetByIDResponse) ProtoMessage() {}

func (x *GetByIDResponse) ProtoReflect() protoreflect.Message {
	mi := &file_products_products_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetByIDResponse.ProtoReflect.Descriptor instead.
func (*GetByIDResponse) Descriptor() ([]byte, []int) {
	return file_products_products_proto_rawDescGZIP(), []int{4}
}

func (x *GetByIDResponse) GetData() *Product {
	if x != nil {
		return x.Data
	}
	return nil
}

type FindRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Limit      uint32      `protobuf:"varint,1,opt,name=limit,proto3" json:"limit,omitempty"`
	Offset     uint64      `protobuf:"varint,2,opt,name=offset,proto3" json:"offset,omitempty"`
	CategoryId uint64      `protobuf:"varint,3,opt,name=category_id,json=categoryId,proto3" json:"category_id,omitempty"`
	Search     string      `protobuf:"bytes,4,opt,name=search,proto3" json:"search,omitempty"`
	IsVisible  VisibleENUM `protobuf:"varint,5,opt,name=is_visible,json=isVisible,proto3,enum=productspb.VisibleENUM" json:"is_visible,omitempty"`
}

func (x *FindRequest) Reset() {
	*x = FindRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_products_products_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindRequest) ProtoMessage() {}

func (x *FindRequest) ProtoReflect() protoreflect.Message {
	mi := &file_products_products_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindRequest.ProtoReflect.Descriptor instead.
func (*FindRequest) Descriptor() ([]byte, []int) {
	return file_products_products_proto_rawDescGZIP(), []int{5}
}

func (x *FindRequest) GetLimit() uint32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *FindRequest) GetOffset() uint64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *FindRequest) GetCategoryId() uint64 {
	if x != nil {
		return x.CategoryId
	}
	return 0
}

func (x *FindRequest) GetSearch() string {
	if x != nil {
		return x.Search
	}
	return ""
}

func (x *FindRequest) GetIsVisible() VisibleENUM {
	if x != nil {
		return x.IsVisible
	}
	return VisibleENUM_Any
}

type FindResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data []*Product `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *FindResponse) Reset() {
	*x = FindResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_products_products_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindResponse) ProtoMessage() {}

func (x *FindResponse) ProtoReflect() protoreflect.Message {
	mi := &file_products_products_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindResponse.ProtoReflect.Descriptor instead.
func (*FindResponse) Descriptor() ([]byte, []int) {
	return file_products_products_proto_rawDescGZIP(), []int{6}
}

func (x *FindResponse) GetData() []*Product {
	if x != nil {
		return x.Data
	}
	return nil
}

type UpdateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   uint64              `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Data *UpdateRequest_Data `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *UpdateRequest) Reset() {
	*x = UpdateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_products_products_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateRequest) ProtoMessage() {}

func (x *UpdateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_products_products_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateRequest.ProtoReflect.Descriptor instead.
func (*UpdateRequest) Descriptor() ([]byte, []int) {
	return file_products_products_proto_rawDescGZIP(), []int{7}
}

func (x *UpdateRequest) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateRequest) GetData() *UpdateRequest_Data {
	if x != nil {
		return x.Data
	}
	return nil
}

type SetVisibleRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   uint64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Data *SetVisibleRequest_Data `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *SetVisibleRequest) Reset() {
	*x = SetVisibleRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_products_products_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetVisibleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetVisibleRequest) ProtoMessage() {}

func (x *SetVisibleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_products_products_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetVisibleRequest.ProtoReflect.Descriptor instead.
func (*SetVisibleRequest) Descriptor() ([]byte, []int) {
	return file_products_products_proto_rawDescGZIP(), []int{8}
}

func (x *SetVisibleRequest) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SetVisibleRequest) GetData() *SetVisibleRequest_Data {
	if x != nil {
		return x.Data
	}
	return nil
}

type FindCharacteristicsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProductIds []uint64 `protobuf:"varint,1,rep,packed,name=product_ids,json=productIds,proto3" json:"product_ids,omitempty"`
}

func (x *FindCharacteristicsRequest) Reset() {
	*x = FindCharacteristicsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_products_products_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindCharacteristicsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindCharacteristicsRequest) ProtoMessage() {}

func (x *FindCharacteristicsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_products_products_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindCharacteristicsRequest.ProtoReflect.Descriptor instead.
func (*FindCharacteristicsRequest) Descriptor() ([]byte, []int) {
	return file_products_products_proto_rawDescGZIP(), []int{9}
}

func (x *FindCharacteristicsRequest) GetProductIds() []uint64 {
	if x != nil {
		return x.ProductIds
	}
	return nil
}

type FindCharacteristicsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data []*FindCharacteristicsResponse_Data `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *FindCharacteristicsResponse) Reset() {
	*x = FindCharacteristicsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_products_products_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindCharacteristicsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindCharacteristicsResponse) ProtoMessage() {}

func (x *FindCharacteristicsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_products_products_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindCharacteristicsResponse.ProtoReflect.Descriptor instead.
func (*FindCharacteristicsResponse) Descriptor() ([]byte, []int) {
	return file_products_products_proto_rawDescGZIP(), []int{10}
}

func (x *FindCharacteristicsResponse) GetData() []*FindCharacteristicsResponse_Data {
	if x != nil {
		return x.Data
	}
	return nil
}

type AddCharacteristicRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProductId uint64                         `protobuf:"varint,1,opt,name=product_id,json=productId,proto3" json:"product_id,omitempty"`
	Data      *AddCharacteristicRequest_Data `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *AddCharacteristicRequest) Reset() {
	*x = AddCharacteristicRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_products_products_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddCharacteristicRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddCharacteristicRequest) ProtoMessage() {}

func (x *AddCharacteristicRequest) ProtoReflect() protoreflect.Message {
	mi := &file_products_products_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddCharacteristicRequest.ProtoReflect.Descriptor instead.
func (*AddCharacteristicRequest) Descriptor() ([]byte, []int) {
	return file_products_products_proto_rawDescGZIP(), []int{11}
}

func (x *AddCharacteristicRequest) GetProductId() uint64 {
	if x != nil {
		return x.ProductId
	}
	return 0
}

func (x *AddCharacteristicRequest) GetData() *AddCharacteristicRequest_Data {
	if x != nil {
		return x.Data
	}
	return nil
}

type UpdateCharacteristicRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProductId          uint64                            `protobuf:"varint,1,opt,name=product_id,json=productId,proto3" json:"product_id,omitempty"`
	CharacteristicName string                            `protobuf:"bytes,2,opt,name=characteristic_name,json=characteristicName,proto3" json:"characteristic_name,omitempty"`
	Data               *UpdateCharacteristicRequest_Data `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *UpdateCharacteristicRequest) Reset() {
	*x = UpdateCharacteristicRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_products_products_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateCharacteristicRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateCharacteristicRequest) ProtoMessage() {}

func (x *UpdateCharacteristicRequest) ProtoReflect() protoreflect.Message {
	mi := &file_products_products_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateCharacteristicRequest.ProtoReflect.Descriptor instead.
func (*UpdateCharacteristicRequest) Descriptor() ([]byte, []int) {
	return file_products_products_proto_rawDescGZIP(), []int{12}
}

func (x *UpdateCharacteristicRequest) GetProductId() uint64 {
	if x != nil {
		return x.ProductId
	}
	return 0
}

func (x *UpdateCharacteristicRequest) GetCharacteristicName() string {
	if x != nil {
		return x.CharacteristicName
	}
	return ""
}

func (x *UpdateCharacteristicRequest) GetData() *UpdateCharacteristicRequest_Data {
	if x != nil {
		return x.Data
	}
	return nil
}

type RemoveCharacteristicRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProductId          uint64 `protobuf:"varint,1,opt,name=product_id,json=productId,proto3" json:"product_id,omitempty"`
	CharacteristicName string `protobuf:"bytes,2,opt,name=characteristic_name,json=characteristicName,proto3" json:"characteristic_name,omitempty"`
}

func (x *RemoveCharacteristicRequest) Reset() {
	*x = RemoveCharacteristicRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_products_products_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveCharacteristicRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveCharacteristicRequest) ProtoMessage() {}

func (x *RemoveCharacteristicRequest) ProtoReflect() protoreflect.Message {
	mi := &file_products_products_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveCharacteristicRequest.ProtoReflect.Descriptor instead.
func (*RemoveCharacteristicRequest) Descriptor() ([]byte, []int) {
	return file_products_products_proto_rawDescGZIP(), []int{13}
}

func (x *RemoveCharacteristicRequest) GetProductId() uint64 {
	if x != nil {
		return x.ProductId
	}
	return 0
}

func (x *RemoveCharacteristicRequest) GetCharacteristicName() string {
	if x != nil {
		return x.CharacteristicName
	}
	return ""
}

type UpdateRequest_Data struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name              string                `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Description       string                `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	CategoryId        uint64                `protobuf:"varint,3,opt,name=category_id,json=categoryId,proto3" json:"category_id,omitempty"`
	UnitOfMeasurement UnitOfMeasurementENUM `protobuf:"varint,4,opt,name=unit_of_measurement,json=unitOfMeasurement,proto3,enum=productspb.UnitOfMeasurementENUM" json:"unit_of_measurement,omitempty"`
	Vat               VATENUM               `protobuf:"varint,5,opt,name=vat,proto3,enum=productspb.VATENUM" json:"vat,omitempty"`
	OldPrice          float64               `protobuf:"fixed64,6,opt,name=old_price,json=oldPrice,proto3" json:"old_price,omitempty"`
	DiscountCoeff     float64               `protobuf:"fixed64,7,opt,name=discount_coeff,json=discountCoeff,proto3" json:"discount_coeff,omitempty"`
}

func (x *UpdateRequest_Data) Reset() {
	*x = UpdateRequest_Data{}
	if protoimpl.UnsafeEnabled {
		mi := &file_products_products_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateRequest_Data) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateRequest_Data) ProtoMessage() {}

func (x *UpdateRequest_Data) ProtoReflect() protoreflect.Message {
	mi := &file_products_products_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateRequest_Data.ProtoReflect.Descriptor instead.
func (*UpdateRequest_Data) Descriptor() ([]byte, []int) {
	return file_products_products_proto_rawDescGZIP(), []int{7, 0}
}

func (x *UpdateRequest_Data) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UpdateRequest_Data) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *UpdateRequest_Data) GetCategoryId() uint64 {
	if x != nil {
		return x.CategoryId
	}
	return 0
}

func (x *UpdateRequest_Data) GetUnitOfMeasurement() UnitOfMeasurementENUM {
	if x != nil {
		return x.UnitOfMeasurement
	}
	return UnitOfMeasurementENUM_PIECE
}

func (x *UpdateRequest_Data) GetVat() VATENUM {
	if x != nil {
		return x.Vat
	}
	return VATENUM_NDS20
}

func (x *UpdateRequest_Data) GetOldPrice() float64 {
	if x != nil {
		return x.OldPrice
	}
	return 0
}

func (x *UpdateRequest_Data) GetDiscountCoeff() float64 {
	if x != nil {
		return x.DiscountCoeff
	}
	return 0
}

type SetVisibleRequest_Data struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsVisible bool `protobuf:"varint,1,opt,name=is_visible,json=isVisible,proto3" json:"is_visible,omitempty"`
}

func (x *SetVisibleRequest_Data) Reset() {
	*x = SetVisibleRequest_Data{}
	if protoimpl.UnsafeEnabled {
		mi := &file_products_products_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetVisibleRequest_Data) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetVisibleRequest_Data) ProtoMessage() {}

func (x *SetVisibleRequest_Data) ProtoReflect() protoreflect.Message {
	mi := &file_products_products_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetVisibleRequest_Data.ProtoReflect.Descriptor instead.
func (*SetVisibleRequest_Data) Descriptor() ([]byte, []int) {
	return file_products_products_proto_rawDescGZIP(), []int{8, 0}
}

func (x *SetVisibleRequest_Data) GetIsVisible() bool {
	if x != nil {
		return x.IsVisible
	}
	return false
}

type FindCharacteristicsResponse_Data struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProductId          uint64 `protobuf:"varint,1,opt,name=product_id,json=productId,proto3" json:"product_id,omitempty"`
	CharacteristicName string `protobuf:"bytes,2,opt,name=characteristic_name,json=characteristicName,proto3" json:"characteristic_name,omitempty"`
	Value              string `protobuf:"bytes,3,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *FindCharacteristicsResponse_Data) Reset() {
	*x = FindCharacteristicsResponse_Data{}
	if protoimpl.UnsafeEnabled {
		mi := &file_products_products_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FindCharacteristicsResponse_Data) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FindCharacteristicsResponse_Data) ProtoMessage() {}

func (x *FindCharacteristicsResponse_Data) ProtoReflect() protoreflect.Message {
	mi := &file_products_products_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FindCharacteristicsResponse_Data.ProtoReflect.Descriptor instead.
func (*FindCharacteristicsResponse_Data) Descriptor() ([]byte, []int) {
	return file_products_products_proto_rawDescGZIP(), []int{10, 0}
}

func (x *FindCharacteristicsResponse_Data) GetProductId() uint64 {
	if x != nil {
		return x.ProductId
	}
	return 0
}

func (x *FindCharacteristicsResponse_Data) GetCharacteristicName() string {
	if x != nil {
		return x.CharacteristicName
	}
	return ""
}

func (x *FindCharacteristicsResponse_Data) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

type AddCharacteristicRequest_Data struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name  string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Value string `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *AddCharacteristicRequest_Data) Reset() {
	*x = AddCharacteristicRequest_Data{}
	if protoimpl.UnsafeEnabled {
		mi := &file_products_products_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddCharacteristicRequest_Data) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddCharacteristicRequest_Data) ProtoMessage() {}

func (x *AddCharacteristicRequest_Data) ProtoReflect() protoreflect.Message {
	mi := &file_products_products_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddCharacteristicRequest_Data.ProtoReflect.Descriptor instead.
func (*AddCharacteristicRequest_Data) Descriptor() ([]byte, []int) {
	return file_products_products_proto_rawDescGZIP(), []int{11, 0}
}

func (x *AddCharacteristicRequest_Data) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AddCharacteristicRequest_Data) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

type UpdateCharacteristicRequest_Data struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value string `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *UpdateCharacteristicRequest_Data) Reset() {
	*x = UpdateCharacteristicRequest_Data{}
	if protoimpl.UnsafeEnabled {
		mi := &file_products_products_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateCharacteristicRequest_Data) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateCharacteristicRequest_Data) ProtoMessage() {}

func (x *UpdateCharacteristicRequest_Data) ProtoReflect() protoreflect.Message {
	mi := &file_products_products_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateCharacteristicRequest_Data.ProtoReflect.Descriptor instead.
func (*UpdateCharacteristicRequest_Data) Descriptor() ([]byte, []int) {
	return file_products_products_proto_rawDescGZIP(), []int{12, 0}
}

func (x *UpdateCharacteristicRequest_Data) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

var File_products_products_proto protoreflect.FileDescriptor

var file_products_products_proto_rawDesc = []byte{
	0x0a, 0x17, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x2f, 0x70, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0a, 0x70, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x73, 0x70, 0x62, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x22, 0xe3, 0x02, 0x0a, 0x07, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79,
	0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x63, 0x61, 0x74, 0x65, 0x67,
	0x6f, 0x72, 0x79, 0x49, 0x64, 0x12, 0x51, 0x0a, 0x13, 0x75, 0x6e, 0x69, 0x74, 0x5f, 0x6f, 0x66,
	0x5f, 0x6d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x21, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x70, 0x62, 0x2e,
	0x55, 0x6e, 0x69, 0x74, 0x4f, 0x66, 0x4d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x6d, 0x65, 0x6e,
	0x74, 0x45, 0x4e, 0x55, 0x4d, 0x52, 0x11, 0x75, 0x6e, 0x69, 0x74, 0x4f, 0x66, 0x4d, 0x65, 0x61,
	0x73, 0x75, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x25, 0x0a, 0x03, 0x76, 0x61, 0x74, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x13, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73,
	0x70, 0x62, 0x2e, 0x56, 0x41, 0x54, 0x45, 0x4e, 0x55, 0x4d, 0x52, 0x03, 0x76, 0x61, 0x74, 0x12,
	0x1b, 0x0a, 0x09, 0x6f, 0x6c, 0x64, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x01, 0x52, 0x08, 0x6f, 0x6c, 0x64, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x25, 0x0a, 0x0e,
	0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x63, 0x6f, 0x65, 0x66, 0x66, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x01, 0x52, 0x0d, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x43, 0x6f,
	0x65, 0x66, 0x66, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x01, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x73, 0x5f,
	0x76, 0x69, 0x73, 0x69, 0x62, 0x6c, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x69,
	0x73, 0x56, 0x69, 0x73, 0x69, 0x62, 0x6c, 0x65, 0x22, 0xa4, 0x02, 0x0a, 0x0d, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20,
	0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x5f, 0x69, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x49,
	0x64, 0x12, 0x51, 0x0a, 0x13, 0x75, 0x6e, 0x69, 0x74, 0x5f, 0x6f, 0x66, 0x5f, 0x6d, 0x65, 0x61,
	0x73, 0x75, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x21,
	0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x70, 0x62, 0x2e, 0x55, 0x6e, 0x69, 0x74,
	0x4f, 0x66, 0x4d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x45, 0x4e, 0x55,
	0x4d, 0x52, 0x11, 0x75, 0x6e, 0x69, 0x74, 0x4f, 0x66, 0x4d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65,
	0x6d, 0x65, 0x6e, 0x74, 0x12, 0x25, 0x0a, 0x03, 0x76, 0x61, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x13, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x70, 0x62, 0x2e, 0x56,
	0x41, 0x54, 0x45, 0x4e, 0x55, 0x4d, 0x52, 0x03, 0x76, 0x61, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x6f,
	0x6c, 0x64, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08,
	0x6f, 0x6c, 0x64, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x64, 0x69, 0x73, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x63, 0x6f, 0x65, 0x66, 0x66, 0x18, 0x07, 0x20, 0x01, 0x28, 0x01,
	0x52, 0x0d, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x43, 0x6f, 0x65, 0x66, 0x66, 0x22,
	0x20, 0x0a, 0x0e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69,
	0x64, 0x22, 0x20, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x02, 0x69, 0x64, 0x22, 0x3a, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x27, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x70,
	0x62, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22,
	0xac, 0x01, 0x0a, 0x0b, 0x46, 0x69, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05,
	0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x1f, 0x0a,
	0x0b, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x0a, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x12, 0x16,
	0x0a, 0x06, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x12, 0x36, 0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x76, 0x69, 0x73,
	0x69, 0x62, 0x6c, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x17, 0x2e, 0x70, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x73, 0x70, 0x62, 0x2e, 0x56, 0x69, 0x73, 0x69, 0x62, 0x6c, 0x65, 0x45,
	0x4e, 0x55, 0x4d, 0x52, 0x09, 0x69, 0x73, 0x56, 0x69, 0x73, 0x69, 0x62, 0x6c, 0x65, 0x22, 0x37,
	0x0a, 0x0c, 0x46, 0x69, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x27,
	0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x70,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x70, 0x62, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xf1, 0x02, 0x0a, 0x0d, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x32, 0x0a, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x73, 0x70, 0x62, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x1a, 0x9b, 0x02,
	0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1f, 0x0a, 0x0b,
	0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x0a, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x12, 0x51, 0x0a,
	0x13, 0x75, 0x6e, 0x69, 0x74, 0x5f, 0x6f, 0x66, 0x5f, 0x6d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65,
	0x6d, 0x65, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x21, 0x2e, 0x70, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x73, 0x70, 0x62, 0x2e, 0x55, 0x6e, 0x69, 0x74, 0x4f, 0x66, 0x4d, 0x65,
	0x61, 0x73, 0x75, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x45, 0x4e, 0x55, 0x4d, 0x52, 0x11, 0x75,
	0x6e, 0x69, 0x74, 0x4f, 0x66, 0x4d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74,
	0x12, 0x25, 0x0a, 0x03, 0x76, 0x61, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x13, 0x2e,
	0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x70, 0x62, 0x2e, 0x56, 0x41, 0x54, 0x45, 0x4e,
	0x55, 0x4d, 0x52, 0x03, 0x76, 0x61, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x6f, 0x6c, 0x64, 0x5f, 0x70,
	0x72, 0x69, 0x63, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x6f, 0x6c, 0x64, 0x50,
	0x72, 0x69, 0x63, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x5f, 0x63, 0x6f, 0x65, 0x66, 0x66, 0x18, 0x07, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0d, 0x64, 0x69,
	0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x43, 0x6f, 0x65, 0x66, 0x66, 0x22, 0x82, 0x01, 0x0a, 0x11,
	0x53, 0x65, 0x74, 0x56, 0x69, 0x73, 0x69, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x36, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x22, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x70, 0x62, 0x2e, 0x53, 0x65, 0x74,
	0x56, 0x69, 0x73, 0x69, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x44,
	0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x1a, 0x25, 0x0a, 0x04, 0x44, 0x61, 0x74,
	0x61, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x76, 0x69, 0x73, 0x69, 0x62, 0x6c, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x69, 0x73, 0x56, 0x69, 0x73, 0x69, 0x62, 0x6c, 0x65,
	0x22, 0x3d, 0x0a, 0x1a, 0x46, 0x69, 0x6e, 0x64, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65,
	0x72, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f,
	0x0a, 0x0b, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x04, 0x52, 0x0a, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x64, 0x73, 0x22,
	0xcd, 0x01, 0x0a, 0x1b, 0x46, 0x69, 0x6e, 0x64, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65,
	0x72, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x40, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2c, 0x2e,
	0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x70, 0x62, 0x2e, 0x46, 0x69, 0x6e, 0x64, 0x43,
	0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x1a, 0x6c, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x70,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x64, 0x12, 0x2f, 0x0a, 0x13, 0x63, 0x68, 0x61, 0x72,
	0x61, 0x63, 0x74, 0x65, 0x72, 0x69, 0x73, 0x74, 0x69, 0x63, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x63, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72,
	0x69, 0x73, 0x74, 0x69, 0x63, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22,
	0xaa, 0x01, 0x0a, 0x18, 0x41, 0x64, 0x64, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72,
	0x69, 0x73, 0x74, 0x69, 0x63, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a,
	0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x64, 0x12, 0x3d, 0x0a, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x70, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x73, 0x70, 0x62, 0x2e, 0x41, 0x64, 0x64, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63,
	0x74, 0x65, 0x72, 0x69, 0x73, 0x74, 0x69, 0x63, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e,
	0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x1a, 0x30, 0x0a, 0x04, 0x44, 0x61,
	0x74, 0x61, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0xcd, 0x01, 0x0a,
	0x1b, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72,
	0x69, 0x73, 0x74, 0x69, 0x63, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a,
	0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x64, 0x12, 0x2f, 0x0a, 0x13, 0x63,
	0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x69, 0x73, 0x74, 0x69, 0x63, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x63, 0x68, 0x61, 0x72, 0x61, 0x63,
	0x74, 0x65, 0x72, 0x69, 0x73, 0x74, 0x69, 0x63, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x40, 0x0a, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x70, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x73, 0x70, 0x62, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x68,
	0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x69, 0x73, 0x74, 0x69, 0x63, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x1a, 0x1c,
	0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x6d, 0x0a, 0x1b,
	0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x69,
	0x73, 0x74, 0x69, 0x63, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x70,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x64, 0x12, 0x2f, 0x0a, 0x13, 0x63, 0x68,
	0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x69, 0x73, 0x74, 0x69, 0x63, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x63, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74,
	0x65, 0x72, 0x69, 0x73, 0x74, 0x69, 0x63, 0x4e, 0x61, 0x6d, 0x65, 0x2a, 0x29, 0x0a, 0x07, 0x56,
	0x41, 0x54, 0x45, 0x4e, 0x55, 0x4d, 0x12, 0x09, 0x0a, 0x05, 0x4e, 0x44, 0x53, 0x32, 0x30, 0x10,
	0x00, 0x12, 0x09, 0x0a, 0x05, 0x4e, 0x44, 0x53, 0x31, 0x30, 0x10, 0x01, 0x12, 0x08, 0x0a, 0x04,
	0x4e, 0x44, 0x53, 0x30, 0x10, 0x02, 0x2a, 0x79, 0x0a, 0x15, 0x55, 0x6e, 0x69, 0x74, 0x4f, 0x66,
	0x4d, 0x65, 0x61, 0x73, 0x75, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x45, 0x4e, 0x55, 0x4d, 0x12,
	0x09, 0x0a, 0x05, 0x50, 0x49, 0x45, 0x43, 0x45, 0x10, 0x00, 0x12, 0x09, 0x0a, 0x05, 0x53, 0x48,
	0x45, 0x45, 0x54, 0x10, 0x01, 0x12, 0x0e, 0x0a, 0x0a, 0x43, 0x45, 0x4e, 0x54, 0x49, 0x4d, 0x45,
	0x54, 0x52, 0x45, 0x10, 0x02, 0x12, 0x09, 0x0a, 0x05, 0x4d, 0x45, 0x54, 0x52, 0x45, 0x10, 0x03,
	0x12, 0x0c, 0x0a, 0x08, 0x4b, 0x49, 0x4c, 0x4f, 0x47, 0x52, 0x41, 0x4d, 0x10, 0x04, 0x12, 0x10,
	0x0a, 0x0c, 0x53, 0x51, 0x55, 0x41, 0x52, 0x45, 0x5f, 0x4d, 0x45, 0x54, 0x45, 0x52, 0x10, 0x05,
	0x12, 0x0f, 0x0a, 0x0b, 0x43, 0x55, 0x42, 0x49, 0x43, 0x5f, 0x4d, 0x45, 0x54, 0x45, 0x52, 0x10,
	0x06, 0x2a, 0x33, 0x0a, 0x0b, 0x56, 0x69, 0x73, 0x69, 0x62, 0x6c, 0x65, 0x45, 0x4e, 0x55, 0x4d,
	0x12, 0x07, 0x0a, 0x03, 0x41, 0x6e, 0x79, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x56, 0x69, 0x73,
	0x69, 0x62, 0x6c, 0x65, 0x10, 0x01, 0x12, 0x0e, 0x0a, 0x0a, 0x4e, 0x6f, 0x74, 0x56, 0x69, 0x73,
	0x69, 0x62, 0x6c, 0x65, 0x10, 0x02, 0x32, 0xb9, 0x05, 0x0a, 0x08, 0x50, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x73, 0x12, 0x3f, 0x0a, 0x06, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x19, 0x2e,
	0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x70, 0x62, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x73, 0x70, 0x62, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x42, 0x0a, 0x07, 0x47, 0x65, 0x74, 0x42, 0x79, 0x49, 0x44, 0x12,
	0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74,
	0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x70, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x70, 0x62, 0x2e, 0x47, 0x65, 0x74, 0x42, 0x79, 0x49, 0x44,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x39, 0x0a, 0x04, 0x46, 0x69, 0x6e, 0x64,
	0x12, 0x17, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x70, 0x62, 0x2e, 0x46, 0x69,
	0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x70, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x73, 0x70, 0x62, 0x2e, 0x46, 0x69, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x3b, 0x0a, 0x06, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x19, 0x2e,
	0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x70, 0x62, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79,
	0x12, 0x43, 0x0a, 0x0a, 0x53, 0x65, 0x74, 0x56, 0x69, 0x73, 0x69, 0x62, 0x6c, 0x65, 0x12, 0x1d,
	0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x70, 0x62, 0x2e, 0x53, 0x65, 0x74, 0x56,
	0x69, 0x73, 0x69, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x66, 0x0a, 0x13, 0x46, 0x69, 0x6e, 0x64, 0x43, 0x68, 0x61,
	0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x12, 0x26, 0x2e, 0x70,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x70, 0x62, 0x2e, 0x46, 0x69, 0x6e, 0x64, 0x43, 0x68,
	0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x70,
	0x62, 0x2e, 0x46, 0x69, 0x6e, 0x64, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x69,
	0x73, 0x74, 0x69, 0x63, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x51, 0x0a,
	0x11, 0x41, 0x64, 0x64, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x69, 0x73, 0x74,
	0x69, 0x63, 0x12, 0x24, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x70, 0x62, 0x2e,
	0x41, 0x64, 0x64, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x69, 0x73, 0x74, 0x69,
	0x63, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79,
	0x12, 0x57, 0x0a, 0x14, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63,
	0x74, 0x65, 0x72, 0x69, 0x73, 0x74, 0x69, 0x63, 0x12, 0x27, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x73, 0x70, 0x62, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x68, 0x61, 0x72,
	0x61, 0x63, 0x74, 0x65, 0x72, 0x69, 0x73, 0x74, 0x69, 0x63, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x57, 0x0a, 0x14, 0x52, 0x65, 0x6d,
	0x6f, 0x76, 0x65, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x69, 0x73, 0x74, 0x69,
	0x63, 0x12, 0x27, 0x2e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x70, 0x62, 0x2e, 0x52,
	0x65, 0x6d, 0x6f, 0x76, 0x65, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x69, 0x73,
	0x74, 0x69, 0x63, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70,
	0x74, 0x79, 0x42, 0x3d, 0x5a, 0x3b, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d,
	0x2f, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x72, 0x6f, 0x2d, 0x6d, 0x70, 0x6f, 0x2d, 0x69, 0x74, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2f, 0x67, 0x65, 0x6e, 0x2f, 0x67, 0x6f, 0x2f, 0x70, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x3b, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x70,
	0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_products_products_proto_rawDescOnce sync.Once
	file_products_products_proto_rawDescData = file_products_products_proto_rawDesc
)

func file_products_products_proto_rawDescGZIP() []byte {
	file_products_products_proto_rawDescOnce.Do(func() {
		file_products_products_proto_rawDescData = protoimpl.X.CompressGZIP(file_products_products_proto_rawDescData)
	})
	return file_products_products_proto_rawDescData
}

var file_products_products_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_products_products_proto_msgTypes = make([]protoimpl.MessageInfo, 19)
var file_products_products_proto_goTypes = []interface{}{
	(VATENUM)(0),                             // 0: productspb.VATENUM
	(UnitOfMeasurementENUM)(0),               // 1: productspb.UnitOfMeasurementENUM
	(VisibleENUM)(0),                         // 2: productspb.VisibleENUM
	(*Product)(nil),                          // 3: productspb.Product
	(*CreateRequest)(nil),                    // 4: productspb.CreateRequest
	(*CreateResponse)(nil),                   // 5: productspb.CreateResponse
	(*GetByIDRequest)(nil),                   // 6: productspb.GetByIDRequest
	(*GetByIDResponse)(nil),                  // 7: productspb.GetByIDResponse
	(*FindRequest)(nil),                      // 8: productspb.FindRequest
	(*FindResponse)(nil),                     // 9: productspb.FindResponse
	(*UpdateRequest)(nil),                    // 10: productspb.UpdateRequest
	(*SetVisibleRequest)(nil),                // 11: productspb.SetVisibleRequest
	(*FindCharacteristicsRequest)(nil),       // 12: productspb.FindCharacteristicsRequest
	(*FindCharacteristicsResponse)(nil),      // 13: productspb.FindCharacteristicsResponse
	(*AddCharacteristicRequest)(nil),         // 14: productspb.AddCharacteristicRequest
	(*UpdateCharacteristicRequest)(nil),      // 15: productspb.UpdateCharacteristicRequest
	(*RemoveCharacteristicRequest)(nil),      // 16: productspb.RemoveCharacteristicRequest
	(*UpdateRequest_Data)(nil),               // 17: productspb.UpdateRequest.Data
	(*SetVisibleRequest_Data)(nil),           // 18: productspb.SetVisibleRequest.Data
	(*FindCharacteristicsResponse_Data)(nil), // 19: productspb.FindCharacteristicsResponse.Data
	(*AddCharacteristicRequest_Data)(nil),    // 20: productspb.AddCharacteristicRequest.Data
	(*UpdateCharacteristicRequest_Data)(nil), // 21: productspb.UpdateCharacteristicRequest.Data
	(*emptypb.Empty)(nil),                    // 22: google.protobuf.Empty
}
var file_products_products_proto_depIdxs = []int32{
	1,  // 0: productspb.Product.unit_of_measurement:type_name -> productspb.UnitOfMeasurementENUM
	0,  // 1: productspb.Product.vat:type_name -> productspb.VATENUM
	1,  // 2: productspb.CreateRequest.unit_of_measurement:type_name -> productspb.UnitOfMeasurementENUM
	0,  // 3: productspb.CreateRequest.vat:type_name -> productspb.VATENUM
	3,  // 4: productspb.GetByIDResponse.data:type_name -> productspb.Product
	2,  // 5: productspb.FindRequest.is_visible:type_name -> productspb.VisibleENUM
	3,  // 6: productspb.FindResponse.data:type_name -> productspb.Product
	17, // 7: productspb.UpdateRequest.data:type_name -> productspb.UpdateRequest.Data
	18, // 8: productspb.SetVisibleRequest.data:type_name -> productspb.SetVisibleRequest.Data
	19, // 9: productspb.FindCharacteristicsResponse.data:type_name -> productspb.FindCharacteristicsResponse.Data
	20, // 10: productspb.AddCharacteristicRequest.data:type_name -> productspb.AddCharacteristicRequest.Data
	21, // 11: productspb.UpdateCharacteristicRequest.data:type_name -> productspb.UpdateCharacteristicRequest.Data
	1,  // 12: productspb.UpdateRequest.Data.unit_of_measurement:type_name -> productspb.UnitOfMeasurementENUM
	0,  // 13: productspb.UpdateRequest.Data.vat:type_name -> productspb.VATENUM
	4,  // 14: productspb.Products.Create:input_type -> productspb.CreateRequest
	6,  // 15: productspb.Products.GetByID:input_type -> productspb.GetByIDRequest
	8,  // 16: productspb.Products.Find:input_type -> productspb.FindRequest
	10, // 17: productspb.Products.Update:input_type -> productspb.UpdateRequest
	11, // 18: productspb.Products.SetVisible:input_type -> productspb.SetVisibleRequest
	12, // 19: productspb.Products.FindCharacteristics:input_type -> productspb.FindCharacteristicsRequest
	14, // 20: productspb.Products.AddCharacteristic:input_type -> productspb.AddCharacteristicRequest
	15, // 21: productspb.Products.UpdateCharacteristic:input_type -> productspb.UpdateCharacteristicRequest
	16, // 22: productspb.Products.RemoveCharacteristic:input_type -> productspb.RemoveCharacteristicRequest
	5,  // 23: productspb.Products.Create:output_type -> productspb.CreateResponse
	7,  // 24: productspb.Products.GetByID:output_type -> productspb.GetByIDResponse
	9,  // 25: productspb.Products.Find:output_type -> productspb.FindResponse
	22, // 26: productspb.Products.Update:output_type -> google.protobuf.Empty
	22, // 27: productspb.Products.SetVisible:output_type -> google.protobuf.Empty
	13, // 28: productspb.Products.FindCharacteristics:output_type -> productspb.FindCharacteristicsResponse
	22, // 29: productspb.Products.AddCharacteristic:output_type -> google.protobuf.Empty
	22, // 30: productspb.Products.UpdateCharacteristic:output_type -> google.protobuf.Empty
	22, // 31: productspb.Products.RemoveCharacteristic:output_type -> google.protobuf.Empty
	23, // [23:32] is the sub-list for method output_type
	14, // [14:23] is the sub-list for method input_type
	14, // [14:14] is the sub-list for extension type_name
	14, // [14:14] is the sub-list for extension extendee
	0,  // [0:14] is the sub-list for field type_name
}

func init() { file_products_products_proto_init() }
func file_products_products_proto_init() {
	if File_products_products_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_products_products_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Product); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_products_products_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_products_products_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_products_products_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetByIDRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_products_products_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetByIDResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_products_products_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FindRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_products_products_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FindResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_products_products_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_products_products_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetVisibleRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_products_products_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FindCharacteristicsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_products_products_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FindCharacteristicsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_products_products_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddCharacteristicRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_products_products_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateCharacteristicRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_products_products_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveCharacteristicRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_products_products_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateRequest_Data); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_products_products_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetVisibleRequest_Data); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_products_products_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FindCharacteristicsResponse_Data); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_products_products_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddCharacteristicRequest_Data); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_products_products_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateCharacteristicRequest_Data); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_products_products_proto_rawDesc,
			NumEnums:      3,
			NumMessages:   19,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_products_products_proto_goTypes,
		DependencyIndexes: file_products_products_proto_depIdxs,
		EnumInfos:         file_products_products_proto_enumTypes,
		MessageInfos:      file_products_products_proto_msgTypes,
	}.Build()
	File_products_products_proto = out.File
	file_products_products_proto_rawDesc = nil
	file_products_products_proto_goTypes = nil
	file_products_products_proto_depIdxs = nil
}
