# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from google.protobuf import empty_pb2 as google_dot_protobuf_dot_empty__pb2
from products import products_pb2 as products_dot_products__pb2


class ProductsStub(object):
    """Сервис товаров
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.Create = channel.unary_unary(
                '/productspb.Products/Create',
                request_serializer=products_dot_products__pb2.CreateRequest.SerializeToString,
                response_deserializer=products_dot_products__pb2.CreateResponse.FromString,
                )
        self.GetByID = channel.unary_unary(
                '/productspb.Products/GetByID',
                request_serializer=products_dot_products__pb2.GetByIDRequest.SerializeToString,
                response_deserializer=products_dot_products__pb2.GetByIDResponse.FromString,
                )
        self.Find = channel.unary_unary(
                '/productspb.Products/Find',
                request_serializer=products_dot_products__pb2.FindRequest.SerializeToString,
                response_deserializer=products_dot_products__pb2.FindResponse.FromString,
                )
        self.Update = channel.unary_unary(
                '/productspb.Products/Update',
                request_serializer=products_dot_products__pb2.UpdateRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                )
        self.SetVisible = channel.unary_unary(
                '/productspb.Products/SetVisible',
                request_serializer=products_dot_products__pb2.SetVisibleRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                )
        self.UpdateImages = channel.unary_unary(
                '/productspb.Products/UpdateImages',
                request_serializer=products_dot_products__pb2.UpdateImagesRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                )
        self.CreateCharacteristic = channel.unary_unary(
                '/productspb.Products/CreateCharacteristic',
                request_serializer=products_dot_products__pb2.CreateCharacteristicRequest.SerializeToString,
                response_deserializer=products_dot_products__pb2.CreateCharacteristicResponse.FromString,
                )
        self.FindCharacteristics = channel.unary_unary(
                '/productspb.Products/FindCharacteristics',
                request_serializer=products_dot_products__pb2.FindCharacteristicsRequest.SerializeToString,
                response_deserializer=products_dot_products__pb2.FindCharacteristicsResponse.FromString,
                )
        self.UpdateCharacteristic = channel.unary_unary(
                '/productspb.Products/UpdateCharacteristic',
                request_serializer=products_dot_products__pb2.UpdateCharacteristicRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                )
        self.DeleteCharacteristic = channel.unary_unary(
                '/productspb.Products/DeleteCharacteristic',
                request_serializer=products_dot_products__pb2.DeleteCharacteristicRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                )


class ProductsServicer(object):
    """Сервис товаров
    """

    def Create(self, request, context):
        """Создание товара
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetByID(self, request, context):
        """Получение товара по его ID
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Find(self, request, context):
        """Поиск по товарам
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Update(self, request, context):
        """Обновление данных о товаре
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetVisible(self, request, context):
        """Установить значение флага видимости для товара
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateImages(self, request, context):
        """Обновить изображения товара (Аналог PUT в REST)
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateCharacteristic(self, request, context):
        """Создать характеристику
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def FindCharacteristics(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateCharacteristic(self, request, context):
        """Обновить данные о характеристике (Кроме типа данных!)
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteCharacteristic(self, request, context):
        """Удалить характеристику
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_ProductsServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'Create': grpc.unary_unary_rpc_method_handler(
                    servicer.Create,
                    request_deserializer=products_dot_products__pb2.CreateRequest.FromString,
                    response_serializer=products_dot_products__pb2.CreateResponse.SerializeToString,
            ),
            'GetByID': grpc.unary_unary_rpc_method_handler(
                    servicer.GetByID,
                    request_deserializer=products_dot_products__pb2.GetByIDRequest.FromString,
                    response_serializer=products_dot_products__pb2.GetByIDResponse.SerializeToString,
            ),
            'Find': grpc.unary_unary_rpc_method_handler(
                    servicer.Find,
                    request_deserializer=products_dot_products__pb2.FindRequest.FromString,
                    response_serializer=products_dot_products__pb2.FindResponse.SerializeToString,
            ),
            'Update': grpc.unary_unary_rpc_method_handler(
                    servicer.Update,
                    request_deserializer=products_dot_products__pb2.UpdateRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'SetVisible': grpc.unary_unary_rpc_method_handler(
                    servicer.SetVisible,
                    request_deserializer=products_dot_products__pb2.SetVisibleRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'UpdateImages': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateImages,
                    request_deserializer=products_dot_products__pb2.UpdateImagesRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'CreateCharacteristic': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateCharacteristic,
                    request_deserializer=products_dot_products__pb2.CreateCharacteristicRequest.FromString,
                    response_serializer=products_dot_products__pb2.CreateCharacteristicResponse.SerializeToString,
            ),
            'FindCharacteristics': grpc.unary_unary_rpc_method_handler(
                    servicer.FindCharacteristics,
                    request_deserializer=products_dot_products__pb2.FindCharacteristicsRequest.FromString,
                    response_serializer=products_dot_products__pb2.FindCharacteristicsResponse.SerializeToString,
            ),
            'UpdateCharacteristic': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateCharacteristic,
                    request_deserializer=products_dot_products__pb2.UpdateCharacteristicRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'DeleteCharacteristic': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteCharacteristic,
                    request_deserializer=products_dot_products__pb2.DeleteCharacteristicRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'productspb.Products', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Products(object):
    """Сервис товаров
    """

    @staticmethod
    def Create(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/productspb.Products/Create',
            products_dot_products__pb2.CreateRequest.SerializeToString,
            products_dot_products__pb2.CreateResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetByID(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/productspb.Products/GetByID',
            products_dot_products__pb2.GetByIDRequest.SerializeToString,
            products_dot_products__pb2.GetByIDResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Find(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/productspb.Products/Find',
            products_dot_products__pb2.FindRequest.SerializeToString,
            products_dot_products__pb2.FindResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Update(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/productspb.Products/Update',
            products_dot_products__pb2.UpdateRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SetVisible(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/productspb.Products/SetVisible',
            products_dot_products__pb2.SetVisibleRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateImages(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/productspb.Products/UpdateImages',
            products_dot_products__pb2.UpdateImagesRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CreateCharacteristic(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/productspb.Products/CreateCharacteristic',
            products_dot_products__pb2.CreateCharacteristicRequest.SerializeToString,
            products_dot_products__pb2.CreateCharacteristicResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def FindCharacteristics(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/productspb.Products/FindCharacteristics',
            products_dot_products__pb2.FindCharacteristicsRequest.SerializeToString,
            products_dot_products__pb2.FindCharacteristicsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateCharacteristic(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/productspb.Products/UpdateCharacteristic',
            products_dot_products__pb2.UpdateCharacteristicRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeleteCharacteristic(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/productspb.Products/DeleteCharacteristic',
            products_dot_products__pb2.DeleteCharacteristicRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
