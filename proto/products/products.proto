syntax = "proto3";

package productspb;

import "google/protobuf/empty.proto";
import "google/protobuf/wrappers.proto";
import "google/protobuf/timestamp.proto";

option go_package = "github.com/electro-mpo-it/protos/gen/go/products;productspb";

// Сервис товаров
service Products {
    rpc CreateProduct (CreateProductRequest) returns (CreateProductResponse); // Создание товара
    rpc GetProductByID (GetProductByIDRequest) returns (GetProductByIDResponse); // Получение товара по его ID
    rpc FindProducts (ProductsFilterRequest) returns (FindProductsResponse); // Поиск по товарам
    rpc UpdateProductByID (UpdateProductByIDRequest) returns (google.protobuf.Empty);  // Частичное обновление товара

    rpc CreateCharacteristic (CreateCharacteristicRequest) returns (CreateCharacteristicResponse); // Создать характеристику
    rpc FindCharacteristics (FindCharacteristicsRequest) returns (FindCharacteristicsResponse); // Поиск по характеристикам
    rpc UpdateCharacteristic (UpdateCharacteristicRequest) returns (google.protobuf.Empty); // Обновить данные о характеристике (Кроме типа данных!)
    rpc DeleteCharacteristic (DeleteCharacteristicRequest) returns (google.protobuf.Empty); // Удалить характеристику

    rpc AddCharacteristicsToCategories (AddCharacteristicsToCategoriesRequest) returns (google.protobuf.Empty); // Добавляет характеристики к категориям
    rpc DropCharacteristicsFromCategories (DropCharacteristicsFromCategoriesRequest) returns (google.protobuf.Empty); // Удаляет характеристики из категорий

    rpc ApplyFilters (ProductsFilterRequest) returns (AvailableFilters); // <<Фасетная фильтрация товаров>> Выводит доступные для дальнейшей фильтрации цену и характеристики

    rpc CreateTag (CreateTagRequest) returns (CreateTagResponse); // Создаёт тег
    rpc UpdateTagByID (UpdateTagByIDRequest) returns (google.protobuf.Empty); // Частично обновляет тег
    rpc FindTags (FindTagsRequest) returns (FindTagsResponse); // Выполняет поиск по тегам
    rpc DeleteTag (DeleteTagRequest) returns (google.protobuf.Empty); // Удаляет тег

    rpc AddTagsToProducts (AddTagsToProductsRequest) returns (google.protobuf.Empty); // Добавляет теги к товарам
    rpc DropTagsFromProducts (DropTagsFromProductsRequest) returns (google.protobuf.Empty); // Удаляет теги из товаров
}


message CreateProductRequest {
    string name = 1;
    string category_id = 2;
    string description = 3;
    UnitOfMeasurementENUM unit_of_measurement = 4;
    VATENUM vat = 5;
    double old_price = 6;
    double discount_ratio = 7;
    bool is_visible = 8;

    // Nested
    repeated ProductImage images = 31;
    repeated ProductCharacteristic characteristics = 32;
}

message UpdateProductByIDRequest {
    message Data {
        message OptionalUnitOfMeasurementENUM {
            UnitOfMeasurementENUM value = 1;
        }
        message OptionalVATENUM {
            VATENUM value = 1;
        }
        message OptionalProductImages {
            repeated ProductImage value = 1;
        }
        message OptionalProductCharacteristics {
            repeated ProductCharacteristic value = 1;
        }

        google.protobuf.StringValue name = 1;
        google.protobuf.StringValue category_id = 2;
        google.protobuf.StringValue description = 3;
    
        OptionalUnitOfMeasurementENUM unit_of_measurement = 4;
        OptionalVATENUM vat = 5;

        google.protobuf.DoubleValue old_price = 6;
        google.protobuf.DoubleValue discount_ratio = 7;
        google.protobuf.BoolValue is_visible = 8;

        // Nested
        OptionalProductImages images = 31;
        OptionalProductCharacteristics characteristics = 32;
    }

    string id = 1;
    Data data = 2;
}

message ProductCharacteristic {
    string characteristic_id = 1;
    oneof value {
        string text_value = 101;
        double numeric_value = 102;
    };
}


message CreateProductResponse {
    string id = 1; // Id of product
}

message GetProductByIDRequest {
    string id = 1;  // Required. Id of product
}

message GetProductByIDResponse {
    Product data = 1;
}

message FindProductsResponse {
    repeated Product data = 1;
}

message CreateCharacteristicRequest {
    string name = 1;                                // Required.
    CharacteristicValuesTypeEnum values_type = 2;   // Required.
}

message CreateCharacteristicResponse {
    string id = 1;
}

message FindCharacteristicsRequest {
    uint32 limit = 1;                           // Required. Or Ids
    string search = 2;                          // If passed - apply full text search
    repeated string ids = 3;                    // Required. Or limit. If passed - returns ids in this list. Length equals max limit value
    uint64 offset = 4;
    string category_id = 5;
}

message FindCharacteristicsResponse {
    repeated Characteristic data = 1;
}

message UpdateCharacteristicRequest {
    message Data {
        google.protobuf.StringValue name = 1;
    }

    string id = 1;
    Data data = 2;
}

message DeleteCharacteristicRequest {
    string id = 1;
}

message CreateTagRequest {
    string name = 1;
    string background_color = 2;  // In HEX fmt
    string text_color = 3;  // In HEX fmt
}

message CreateTagResponse {
    string id = 1;
}

message UpdateTagByIDRequest {
    message Data {
        google.protobuf.StringValue name = 1;
        google.protobuf.StringValue background_color = 2;  // In HEX fmt
        google.protobuf.StringValue text_color = 3;  // In HEX fmt
    }

    string id = 1;
    Data data = 2;
}

message FindTagsRequest {
    uint32 limit = 1;
    uint64 offset = 2;
    string search = 3;
}

message FindTagsResponse {
    repeated Tag data = 1;
}

message DeleteTagRequest {
    string id = 1;
}

message AddTagsToProductsRequest {
    message ProductTag {
        string product_id = 1;
        string tag_id = 2;
    }

    repeated ProductTag data = 1;
}

message DropTagsFromProductsRequest {
    message ProductTag {
        string product_id = 1;
        string tag_id = 2;
    }

    repeated ProductTag data = 1;
}

                                    /* Типы данных и структуры */


message Tag {
    string id = 1;
    string name = 2;
    string background_color = 3;  // In HEX fmt
    string text_color = 4;  // In HEX fmt
}

enum UnitOfMeasurementENUM {  
    PIECE = 0;         // Штука
    PAIR = 1;          // Пара
    LITER = 2;         // Литр
    ROLL = 3;          // Рулон
    SHEET = 4;         // Лист
    CENTIMETRE = 5;    // Сантиметр
    METRE = 6;         // Метр
    KILOGRAM = 7;      // Килограмм
    SQUARE_METER = 8;  // Квадратный метр
    CUBIC_METER = 9;   // Кубический метр
}

enum VATENUM {  
    NDS20 = 0;   // Налог 20%
    NDS10 = 1;   // Налог 10%
    NDS0 = 2;    // Налог 0%
}

message ProductImage {
    string image_url = 1;
    uint32 sort = 2;
}

enum CharacteristicValuesTypeEnum {
    TEXT = 0;
    NUMERIC = 1;
}

message Characteristic {
    string id = 1;
    string name = 2;
    CharacteristicValuesTypeEnum values_type = 3;
}

message AddCharacteristicsToCategoriesRequest{
    message CategoryCharacteristic {
        string category_id = 1;
        string characteristic_id = 2;
    }
    repeated CategoryCharacteristic data = 1;
}

message DropCharacteristicsFromCategoriesRequest{
    message CategoryCharacteristic {
        string category_id = 1;
        string characteristic_id = 2;
    }
    repeated CategoryCharacteristic data = 1;
}

message Range {
    double from = 1;
    double to = 2;
}

message CharacteristicsFilter {
    message TextValue {
        string id = 1;
        repeated string values = 2;
    }

    message NumericValue {
        string id = 1;
        Range values = 2;
    }

    repeated TextValue text_values = 1;
    repeated NumericValue numeric_values = 2;
}

message ProductsFilterRequest {
    uint32 limit = 1;
    uint64 offset = 2;
    string search = 3;
    Range price = 4;
    google.protobuf.StringValue category_id = 5;
    CharacteristicsFilter characteristics = 6;
    google.protobuf.BoolValue is_visible = 7;
}

message AvailableFilters {
    Range price = 1;
    CharacteristicsFilter characteristics = 2;
}

message Product {
    string id = 1;
    string name = 2;
    string category_id = 3; 
    string description = 4;
    UnitOfMeasurementENUM unit_of_measurement = 5;
    VATENUM vat = 6;
    double old_price = 7;
    double discount_ratio = 8;
    double price = 9;
    bool is_visible = 10;
    google.protobuf.Timestamp updated_at = 11;
    repeated ProductImage images = 12;
    google.protobuf.Timestamp created_at = 13;
    repeated ProductCharacteristic product_characteristics = 14;
}
